{"version":3,"sources":["hooks/useWallet/useWallet.ts","components/Box/Box.tsx","providers/WalletProvider/connectorsPromises.ts","utils/metamask.ts","utils/wait.ts","providers/WalletProvider/WalletProvider.tsx","hooks/usePrev/usePrev.ts","icons/Close.tsx","hooks/useToast/useToast.tsx","components/Modal/Modal.tsx","hooks/useToogle/useToggle.ts","hooks/window/index.ts","components/ModalConnect/ModalConnect.tsx","providers/AppProvider/index.tsx","config/config.ts","theme/index.ts","Main.tsx","stores/app/app.ts","hooks/useDebounceValue/useDebounceValue.ts","App.tsx","hooks/app/index.ts","reportWebVitals.ts","index.tsx","components/Box/index.tsx"],"names":["useWallet","React","useContext","WalletContext","connectCore","connect","others","connector","connectType","chainId","chain","bep","erc","polygon","Box","BoxCore","injected","Promise","resolve","then","all","InjectedConnector","supportedChainIds","bsc","BscConnector","isMetamask","window","ethereum","isMetaMask","addChainBSC","a","provider","request","method","params","toString","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","addChainMatic","wait","time","setTimeout","createContext","setupNetwork","console","error","WalletProvider","props","children","toast","useToast","useState","balance","setBalance","etherSymbol","setEtherSymbol","undefined","rawBalance","setRawBalance","setName","setError","status","setStatus","setProvider","context","useWeb3React","prevStatus","value","ref","useRef","useEffect","current","usePrev","deactivate","activate","library","providerError","account","getBalance","decimalNumber","Decimal","formatEther","toFixed","ethers","providers","Web3Provider","reset","useCallback","close","connectorName","localStorage","setItem","localStorageKey","lastWallet","lastChainId","UnsupportedChainIdError","hasSetup","parseInt","description","removeItem","cb","setInterval","clearInterval","getItem","catch","e","Provider","ether","Close","xmlns","height","viewBox","width","fill","fillRule","clipRule","d","options","op","useMemo","position","useToastCore","Modal","isOpen","onClose","modalContentProps","modalContainerProps","zIndex","bg","mt","boxShadow","maxWidth","mx","containerProps","useToggle","defaultState","active","setIsActive","setActive","setInActive","toggle","state","toggleCallback","VISIBILITY_STATE_SUPPORTED","document","isWindowVisible","visibilityState","useIsWindowVisible","focused","setFocused","listener","addEventListener","removeEventListener","networks","icon","config","PUBLIC_URL","wallets","ModalConnect","onConnect","currentChainId","selectedChainId","setSelectChainId","borderTopLeftRadius","borderTopRightRadius","px","as","minHeight","display","alignItems","fontSize","lineHeight","color","fontWeight","onClick","ml","borderBottomRightRadius","borderBottomLeftRadius","textAlign","xl","base","flexWrap","justifyContent","map","w","border","py","outline","alt","src","h","AppContext","AppProvider","toggleConnect","wallet","isOpenConnect","toggleOpenConnect","t","BSC_RPC_URL","process","POLYGON_RPC_URL","PANCAKE_ROUTER","QUICK_SWAP_ROUTER","PANCAKE_CODE_HASH","QUICK_SWAP_CODE_HASH","transactionSetting","isNaN","theme","extendTheme","styles","global","body","fontFamily","colors","primary","accent","zIndices","hide","auto","docked","dropdown","sticky","banner","overlay","modal","popover","skipLink","tooltip","Home","loadable","MainLayout","Main","path","exact","useAppStore","create","set","blockNumber","setBlockNumber","block","selectBlockUpdater","useDebounceValue","delay","debouncedValue","setDebouncedValue","handler","clearTimeout","getLibrary","pollingInterval","Updater","windowVisible","setState","updateBlock","debouncedState","blockNumberCallback","getBlockNumber","on","removeListener","useAutoUpdateBlockNumber","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c3cc8345.chunk.js","sourcesContent":["import React from \"react\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { WalletContext, WalletStatus } from \"../../providers/WalletProvider\";\nimport { chain } from \"../../config\";\nimport { BigNumber } from \"ethers\";\n\nexport interface UseWalletReturn {\n  account: string | null | undefined;\n  library: Web3Provider | undefined;\n  balance: string;\n  chainId: number;\n  reset: () => void;\n  error: any;\n  connect: (\n    connector: string,\n    connectType?: \"erc\" | \"bep\" | \"polygon\"\n  ) => Promise<void>;\n  status: WalletStatus;\n  providerError: Error | undefined;\n  ether: Web3Provider | undefined;\n  rawBalance: BigNumber | undefined;\n  etherSymbol: string;\n}\n\nfunction useWallet() {\n  const { connect: connectCore, ...others } = React.useContext(WalletContext);\n\n  const connect: (\n    connector: any,\n    connectType: string | number\n  ) => Promise<void> = (connector: any, connectType) => {\n    let chainId: number;\n\n    if (typeof connectType === \"string\") {\n      chainId = chain.bep;\n      if (connectType === \"erc\") {\n        chainId = chain.erc;\n      }\n      if (connectType === \"polygon\") {\n        chainId = chain.polygon;\n      }\n    } else {\n      chainId = connectType;\n    }\n\n    return connectCore(connector, chainId);\n  };\n\n  return {\n    ...others,\n    connect: connect,\n  };\n}\n\nexport default useWallet;\n","import { Box as BoxCore, BoxProps as BoxCoreProps } from \"@chakra-ui/layout\";\nexport type BoxProps = BoxCoreProps;\nexport const Box = BoxCore;\n\nexport default Box;\n","import { AbstractConnector } from \"@web3-react/abstract-connector\";\n\nexport const injected: (chainId: number) => Promise<AbstractConnector> = (\n  chainId\n) => {\n  return new Promise((resolve) => {\n    import(\"@web3-react/injected-connector\").then((all) => {\n      const connector = new all.InjectedConnector({\n        supportedChainIds: [chainId],\n      });\n      resolve(connector);\n    });\n  });\n};\n\nexport const bsc: (chainId: number) => Promise<AbstractConnector> = (\n  chainId\n) => {\n  return new Promise((resolve) => {\n    import(\"@binance-chain/bsc-connector\").then((all) => {\n      const connector = new all.BscConnector({ supportedChainIds: [chainId] });\n      resolve(connector);\n    });\n  });\n};\n","import { chain } from \"../config\";\n\nexport function isMetamask(): boolean {\n  return (window as any).ethereum && (window as any).ethereum.isMetaMask;\n}\n\nexport function getMetamaskChain() {\n  if (isMetamask()) {\n    return parseInt((window as any).ethereum.chainId);\n  }\n  return -1;\n}\n\nexport async function addChainBSC() {\n  const provider = (window as any).ethereum;\n  await provider.request({\n    method: \"wallet_addEthereumChain\",\n    params: [\n      {\n        chainId: `0x${chain.bep.toString(16)}`,\n        chainName: \"Binance Smart Chain Mainnet\",\n        nativeCurrency: {\n          name: \"BNB\",\n          symbol: \"bnb\",\n          decimals: 18,\n        },\n        rpcUrls: [\"https://bsc-dataseed.binance.org\"],\n        blockExplorerUrls: [\"https://bscscan.com/\"],\n      },\n    ],\n  });\n}\n\nexport async function addChainMatic() {\n  const provider = (window as any).ethereum;\n  await provider.request({\n    method: \"wallet_addEthereumChain\",\n    params: [\n      {\n        chainId: `0x${chain.polygon.toString(16)}`,\n        chainName: \"Polygon POS\",\n        nativeCurrency: {\n          name: \"MATIC\",\n          symbol: \"MATIC\",\n          decimals: 18,\n        },\n        rpcUrls: [\"https://rpc-mainnet.maticvigil.com/\"],\n        blockExplorerUrls: [\"https://polygonscan.com\"],\n      },\n    ],\n  });\n}\n","export function wait(time: number) {\n  return new Promise<void>((resolve) => {\n    setTimeout(() => {\n      resolve();\n    }, time);\n  });\n}\n","import React from \"react\";\nimport Decimal from \"decimal.js\";\nimport { useWeb3React, UnsupportedChainIdError } from \"@web3-react/core\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { bsc, injected } from \"./connectorsPromises\";\nimport { formatEther } from \"@ethersproject/units\";\nimport { BigNumber, ethers } from \"ethers\";\nimport { chain, localStorageKey } from \"../../config\";\nimport {\n  addChainBSC,\n  addChainMatic,\n  getMetamaskChain,\n  isMetamask,\n} from \"../../utils/metamask\";\nimport { wait } from \"../../utils/wait\";\nimport usePrev from \"../../hooks/usePrev\";\nimport useToast from \"../../hooks/useToast\";\n\nexport type WalletStatus = \"connected\" | \"connecting\" | \"disconnected\";\n\nexport interface WalletContextValue {\n  name: string;\n  account: string | null | undefined;\n  balance: string;\n  chainId: number;\n  reset: () => void;\n  connect: (connectorName: string, chain: number) => Promise<void>;\n  error: any;\n  status: WalletStatus;\n  library: Web3Provider | undefined;\n  providerError: Error | undefined;\n  ether: Web3Provider | undefined;\n  rawBalance?: BigNumber;\n  etherSymbol: string;\n}\n\nexport const WalletContext = React.createContext<WalletContextValue>({} as any);\n\nexport const setupNetwork = async (chainId: number) => {\n  const provider = (window as any).ethereum;\n  if (provider && isMetamask()) {\n    try {\n      if (chainId === chain.bep) {\n        await addChainBSC();\n        return true;\n      }\n\n      if (chainId === chain.polygon) {\n        await addChainMatic();\n        return true;\n      }\n      return false;\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n      return false;\n    }\n  } else {\n    // eslint-disable-next-line no-console\n    console.error(\n      \"Can't setup the BSC network on metamask because window.ethereum is undefined\"\n    );\n    return false;\n  }\n};\n\nfunction WalletProvider(props: { children?: React.ReactNode }) {\n  const { children } = props;\n\n  const toast = useToast();\n\n  const [balance, setBalance] = React.useState(\"\");\n\n  const [etherSymbol, setEtherSymbol] = React.useState(\"\");\n\n  const [rawBalance, setRawBalance] = React.useState<BigNumber | undefined>(\n    undefined\n  );\n\n  const [name, setName] = React.useState(\"\");\n\n  const [error, setError] = React.useState<any>(null);\n\n  const [status, setStatus] = React.useState<WalletStatus>(\"disconnected\");\n\n  const [provider, setProvider] = React.useState<Web3Provider | undefined>();\n\n  const context = useWeb3React<Web3Provider>();\n\n  const prevStatus = usePrev(status);\n\n  const {\n    chainId,\n    connector,\n    deactivate,\n    activate,\n    library,\n    error: providerError,\n    account,\n  } = context;\n\n  React.useEffect(() => {\n    switch (chainId) {\n      case chain.bep: {\n        setEtherSymbol(\"BNB\");\n        break;\n      }\n      case chain.polygon: {\n        setEtherSymbol(\"MATIC\");\n        break;\n      }\n      default: {\n        setEtherSymbol(\"ETH\");\n      }\n    }\n  }, [chainId]);\n\n  React.useEffect(() => {\n    if (account && library) {\n      library?.getBalance(account).then((balance) => {\n        const decimalNumber = new Decimal(formatEther(balance));\n        setBalance(decimalNumber.toFixed(2));\n        setRawBalance(balance);\n      });\n      setProvider(new ethers.providers.Web3Provider(library.provider));\n    } else {\n      setBalance(\"\");\n      setRawBalance(undefined);\n      setProvider(undefined);\n    }\n  }, [account, library]);\n\n  const reset = React.useCallback(() => {\n    if (connector && (connector as any).close) {\n      (connector as any).close();\n    }\n    deactivate();\n    setStatus(\"disconnected\");\n    setError(\"\");\n    setName(\"\");\n  }, [connector, deactivate]);\n\n  const connect = React.useCallback(\n    async (connectorName: string, chainId: number) => {\n      try {\n        reset();\n        setStatus(\"connecting\");\n        let connector;\n        switch (connectorName) {\n          case \"bsc\": {\n            // when the app first load, BSC wallet haven't loaded so better wait a bit\n            await wait(500);\n            connector = await bsc(chainId);\n            break;\n          }\n          default:\n            connector = await injected(chainId);\n        }\n        await activate(connector, undefined, true);\n\n        setName(connectorName || \"injected\");\n        setStatus(\"connected\");\n\n        localStorage.setItem(\n          localStorageKey.lastWallet,\n          connectorName || \"injected\"\n        );\n        localStorage.setItem(localStorageKey.lastChainId, chainId.toString());\n      } catch (e) {\n        if (e instanceof UnsupportedChainIdError) {\n          if (chainId !== chain.erc) {\n            const hasSetup = await setupNetwork(chainId);\n            await wait(1000);\n            if (hasSetup && getMetamaskChain() === chainId) {\n              try {\n                setStatus(\"connecting\");\n                await connect(connectorName, chainId);\n                setStatus(\"connected\");\n                setName(\"injected\");\n                setError(undefined);\n                return;\n              } catch (e) {\n                setName(\"\");\n                setError(e);\n                setStatus(\"disconnected\");\n                return;\n              }\n            }\n          } else {\n            toast({\n              description: \"Please change to the correct network\",\n              status: \"error\",\n            });\n          }\n        }\n        setName(\"\");\n        setError(e);\n        setStatus(\"disconnected\");\n      }\n    },\n    [activate, reset, toast]\n  );\n\n  React.useEffect(() => {\n    if (status === \"disconnected\" && prevStatus === \"connected\") {\n      localStorage.removeItem(localStorageKey.lastWallet);\n      localStorage.removeItem(localStorageKey.lastChainId);\n    }\n  }, [status, prevStatus]);\n\n  React.useEffect(() => {\n    let cb: ReturnType<typeof setInterval>;\n\n    if (account && library) {\n      cb = setInterval(() => {\n        library?.getBalance(account).then((balance) => {\n          const decimalNumber = new Decimal(formatEther(balance));\n          setBalance(decimalNumber.toFixed(2));\n          setRawBalance(balance);\n        });\n      }, 10000);\n    } else {\n      setBalance(\"\");\n      setRawBalance(undefined);\n    }\n\n    return () => {\n      if (cb) {\n        clearInterval(cb);\n      }\n    };\n  }, [account, library]);\n\n  React.useEffect(() => {\n    if (providerError instanceof UnsupportedChainIdError) {\n      toast({\n        description: \"Please change to the correct network\",\n        status: \"error\",\n      });\n    }\n  }, [providerError, toast]);\n\n  React.useEffect(() => {\n    const lastWallet = localStorage.getItem(localStorageKey.lastWallet);\n    if (\n      !account &&\n      status === \"disconnected\" &&\n      prevStatus === undefined &&\n      lastWallet\n    ) {\n      try {\n        const lastChainId = parseInt(\n          localStorage.getItem(localStorageKey.lastChainId) || \"\"\n        );\n\n        localStorage.removeItem(localStorageKey.lastWallet);\n\n        connect(lastWallet, lastChainId).catch(() => {\n          localStorage.removeItem(localStorageKey.lastWallet);\n          localStorage.removeItem(localStorageKey.lastChainId);\n        });\n      } catch (e) {\n        localStorage.removeItem(localStorageKey.lastWallet);\n        localStorage.removeItem(localStorageKey.lastChainId);\n      }\n    }\n  }, [connect, account, status, prevStatus, chainId]);\n\n  return (\n    <WalletContext.Provider\n      value={{\n        rawBalance,\n        name,\n        account,\n        chainId: chainId || chain.bep,\n        reset,\n        connect,\n        balance,\n        error,\n        status,\n        library,\n        providerError,\n        ether: provider,\n        etherSymbol,\n      }}\n    >\n      {children}\n    </WalletContext.Provider>\n  );\n}\n\nexport default WalletProvider;\n","import { useEffect, useRef } from \"react\";\n\nexport default function usePrev<T>(value: T) {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n","import * as React from \"react\";\n\nfunction Close(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height=\"1em\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      fill=\"currentColor\"\n      {...props}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M5.7 2l6.358 6.243L18.416 2 22 5.584l-6.243 6.358L22 18.301 18.416 22l-6.358-6.36-6.359 6.36L2 18.3l6.358-6.359L2 5.584 5.7 2z\"\n      />\n    </svg>\n  );\n}\n\nexport default Close;\n","import { useToast as useToastCore } from \"@chakra-ui/toast\";\nimport { UseToastOptions } from \"@chakra-ui/toast/dist/types/use-toast\";\nimport React from \"react\";\n\nexport default function useToast(options?: UseToastOptions) {\n  const op: UseToastOptions = React.useMemo(() => {\n    return {\n      position: \"top-right\",\n      ...options,\n    };\n  }, [options]);\n\n  return useToastCore(op);\n}\n","import React from \"react\";\nimport {\n  Modal as ModalCore,\n  ModalOverlay,\n  ModalContent,\n} from \"@chakra-ui/modal\";\nimport { BoxProps } from \"../Box\";\n\nexport interface ModalProps {\n  children?: React.ReactNode;\n  isOpen?: boolean;\n  onClose?: () => void;\n  modalContentProps?: BoxProps;\n  modalContainerProps?: BoxProps;\n}\n\nfunction Modal(props: ModalProps) {\n  const {\n    children,\n    isOpen = false,\n    onClose,\n    modalContentProps,\n    modalContainerProps,\n  } = props;\n\n  function handleClose() {\n    if (onClose) {\n      onClose();\n    }\n  }\n\n  return (\n    <ModalCore onClose={handleClose} isOpen={isOpen}>\n      <ModalOverlay zIndex=\"1300\" bg=\"rgba(0, 0, 0, 0.75)\" />\n      <ModalContent\n        mt=\"50px\"\n        boxShadow=\"none\"\n        maxWidth=\"480px\"\n        bg=\"transparent\"\n        mx=\"auto\"\n        containerProps={{\n          zIndex: 1700,\n          ...modalContainerProps,\n        }}\n        {...modalContentProps}\n      >\n        {children}\n      </ModalContent>\n    </ModalCore>\n  );\n}\n\nexport default Modal;\n","import { useState, useCallback, useMemo } from \"react\";\n\nconst useToggle = (defaultState = false) => {\n  const [active, setIsActive] = useState(defaultState);\n\n  const setActive = useCallback(() => {\n    setIsActive(true);\n  }, []);\n\n  const setInActive = useCallback(() => {\n    setIsActive(false);\n  }, []);\n\n  const toggle = useCallback(\n    (state?: boolean) => {\n      setIsActive(\"boolean\" === typeof state ? state : !active);\n    },\n    [active]\n  );\n\n  const toggleCallback = useCallback(\n    (state?: boolean) => {\n      return () => {\n        setIsActive(\"boolean\" === typeof state ? state : !active);\n      };\n    },\n    [active]\n  );\n\n  return useMemo(() => {\n    return {\n      active,\n      setActive,\n      setInActive,\n      toggle,\n      toggleCallback,\n    };\n  }, [active, setActive, setInActive, toggle, toggleCallback]);\n};\n\nexport default useToggle;\n","import { useCallback, useEffect, useState } from \"react\";\n\nconst VISIBILITY_STATE_SUPPORTED = \"visibilityState\" in document;\n\nfunction isWindowVisible() {\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== \"hidden\";\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible(): boolean {\n  const [focused, setFocused] = useState<boolean>(isWindowVisible());\n  const listener = useCallback(() => {\n    setFocused(isWindowVisible());\n  }, [setFocused]);\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined;\n\n    document.addEventListener(\"visibilitychange\", listener);\n    return () => {\n      document.removeEventListener(\"visibilitychange\", listener);\n    };\n  }, [listener]);\n\n  return focused;\n}\n","import React from \"react\";\nimport Box from \"../Box\";\nimport Modal from \"../Modal\";\nimport Close from \"../../icons/Close\";\nimport { chain, config } from \"../../config\";\n\nexport interface ModalConnectProps {\n  currentChainId?: number;\n  isOpen?: boolean;\n  onClose?: () => void;\n  onConnect?: (t: string, chain: number) => void;\n}\n\nconst networks = [\n  {\n    name: \"Binance Chain\",\n    icon: `${config.PUBLIC_URL}images/icon/bsc-wallet.svg`,\n    chainId: chain.bep,\n  },\n  {\n    name: \"Polygon\",\n    icon: `${config.PUBLIC_URL}images/icon/polygon-white.svg`,\n    chainId: chain.polygon,\n  },\n];\n\nconst wallets = {\n  [chain.polygon]: [\n    {\n      name: \"Metamask\",\n      icon: `${config.PUBLIC_URL}images/icon/metamask-fox.svg`,\n      connector: \"injected\",\n    },\n  ],\n  [chain.bep]: [\n    {\n      name: \"Metamask\",\n      icon: `${config.PUBLIC_URL}images/icon/metamask-fox.svg`,\n      connector: \"injected\",\n    },\n    {\n      name: \"Binance Chain Wallet\",\n      icon: `${config.PUBLIC_URL}images/icon/bsc-wallet.svg`,\n      connector: \"bsc\",\n    },\n    {\n      name: \"Wallet Connect\",\n      icon: `${config.PUBLIC_URL}images/icon/wallet-connect.png`,\n      connector: \"walletconnect\",\n    },\n  ],\n};\n\nfunction ModalConnect(props: ModalConnectProps) {\n  const { isOpen, onClose, onConnect, currentChainId = chain.bep } = props;\n\n  const [selectedChainId, setSelectChainId] = React.useState(currentChainId);\n\n  function handleConnect(connector: string, chain: number) {\n    return () => {\n      if (onConnect) {\n        onConnect(connector, chain);\n      }\n    };\n  }\n\n  function handleSelectChain(chain: number) {\n    return () => {\n      if (onConnect) {\n        setSelectChainId(chain);\n      }\n    };\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      modalContentProps={{\n        maxWidth: \"700px\",\n      }}\n    >\n      <Box\n        borderTopLeftRadius=\"24px\"\n        borderTopRightRadius=\"24px\"\n        px=\"30px\"\n        position=\"relative\"\n        as=\"header\"\n        bg=\"#61D9FA\"\n        minHeight=\"70px\"\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        <Box\n          fontSize=\"24px\"\n          lineHeight=\"28px\"\n          color=\"#0D285A\"\n          as=\"h2\"\n          fontWeight={700}\n        >\n          Connect your wallet\n        </Box>\n        <Box\n          onClick={onClose}\n          ml=\"auto\"\n          as=\"button\"\n          color=\"#212B54\"\n          fontSize=\"20px\"\n        >\n          <Close />\n        </Box>\n      </Box>\n      <Box\n        bg=\"#1C264E\"\n        borderBottomRightRadius=\"24px\"\n        borderBottomLeftRadius=\"24px\"\n      >\n        <Box as=\"section\">\n          <Box\n            mt=\"10px\"\n            color=\"primary\"\n            as=\"h3\"\n            fontWeight=\"bold\"\n            fontSize=\"20px\"\n            textAlign=\"center\"\n          >\n            Select network\n          </Box>\n          <Box\n            mt=\"16px\"\n            display={{ xl: \"flex\", base: \"flex\" }}\n            flexWrap=\"wrap\"\n            justifyContent=\"center\"\n          >\n            {networks.map((w) => {\n              return (\n                <Box\n                  width={{\n                    base: \"50%\",\n                    xl: \"25%\",\n                  }}\n                  key={w.name}\n                  color=\"#9CAFF1\"\n                >\n                  <Box\n                    border={w.chainId === selectedChainId ? \"1px solid\" : \"\"}\n                    py=\"20px\"\n                    px=\"30px\"\n                    width=\"100%\"\n                    outline=\"none\"\n                    textAlign=\"center\"\n                    as=\"button\"\n                    fontSize=\"16px\"\n                    fontWeight={700}\n                    onClick={handleSelectChain(w.chainId)}\n                  >\n                    <Box\n                      mx=\"auto\"\n                      as=\"img\"\n                      alt={`${w.name} icon`}\n                      src={w.icon}\n                      w=\"60px\"\n                      h=\"60px\"\n                    />\n                    <Box mt=\"8px\" as=\"span\" display=\"block\">\n                      {w.name}\n                    </Box>\n                  </Box>\n                </Box>\n              );\n            })}\n          </Box>\n        </Box>\n        <Box as=\"section\" mt=\"24px\">\n          <Box\n            mt=\"10px\"\n            color=\"primary\"\n            as=\"h3\"\n            fontWeight=\"bold\"\n            fontSize=\"20px\"\n            textAlign=\"center\"\n          >\n            Select wallet\n          </Box>\n          <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n            {wallets[selectedChainId]?.map((w) => {\n              return (\n                <Box\n                  width={{\n                    base: \"50%\",\n                    xl: \"25%\",\n                  }}\n                  py=\"20px\"\n                  px=\"30px\"\n                  as=\"button\"\n                  key={w.name}\n                  color=\"#9CAFF1\"\n                >\n                  <Box\n                    width=\"100%\"\n                    outline=\"none\"\n                    textAlign=\"center\"\n                    fontSize=\"16px\"\n                    fontWeight={700}\n                    onClick={handleConnect(w.connector, selectedChainId)}\n                  >\n                    <Box\n                      mx=\"auto\"\n                      as=\"img\"\n                      alt={`${w.name} icon`}\n                      src={w.icon}\n                      w=\"50px\"\n                      h=\"50px\"\n                    />\n                    <Box mt=\"8px\" as=\"span\" display=\"block\">\n                      {w.name}\n                    </Box>\n                  </Box>\n                </Box>\n              );\n            })}\n          </Box>\n        </Box>\n      </Box>\n    </Modal>\n  );\n}\n\nexport default ModalConnect;\n","import React from \"react\";\nimport useToggle from \"../../hooks/useToogle\";\nimport ModalConnect from \"../../components/ModalConnect\";\nimport useWallet from \"../../hooks/useWallet\";\nimport { localStorageKey } from \"../../config\";\n\nexport interface AppContextValue {\n  isOpenConnect?: boolean;\n  toggleOpenConnect: (state?: boolean) => void;\n}\n\nexport const AppContext = React.createContext<AppContextValue>({} as any);\n\nexport default function AppProvider(props: { children?: React.ReactNode }) {\n  const toggleConnect = useToggle(false);\n  const wallet = useWallet();\n  const { children } = props;\n\n  function handleConnect(t: string, chain: number) {\n    wallet.connect(t, chain).then(() => {\n      localStorage.setItem(localStorageKey.lastWallet, t);\n      localStorage.setItem(localStorageKey.lastChainId, chain.toString());\n      toggleConnect.setInActive();\n    });\n  }\n\n  return (\n    <AppContext.Provider\n      value={{\n        isOpenConnect: toggleConnect.active,\n        toggleOpenConnect: toggleConnect.toggle,\n      }}\n    >\n      {children}\n      <ModalConnect\n        currentChainId={wallet.chainId}\n        onConnect={handleConnect}\n        onClose={toggleConnect.toggle}\n        isOpen={toggleConnect.active}\n      />\n    </AppContext.Provider>\n  );\n}\n","export interface Config {\n  BSC_RPC_URL: string;\n  POLYGON_RPC_URL: string;\n  PANCAKE_ROUTER: string;\n  QUICK_SWAP_ROUTER: string;\n  PANCAKE_CODE_HASH: string;\n  QUICK_SWAP_CODE_HASH: string;\n  PUBLIC_URL: string;\n}\n\nconst config: Config = {\n  BSC_RPC_URL: process.env.REACT_APP_BSC_RPC_URL as string,\n  POLYGON_RPC_URL: process.env.POLYGON_RPC_URL as string,\n  PANCAKE_ROUTER: \"0x10ED43C718714eb63d5aA57B78B54704E256024E\",\n  QUICK_SWAP_ROUTER: \"0x5757371414417b8C6CAad45bAeF941aBc7d3Ab32\",\n  PANCAKE_CODE_HASH:\n    \"0x00fb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5\",\n  QUICK_SWAP_CODE_HASH:\n    \"0x96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f\",\n  PUBLIC_URL: process.env.PUBLIC_URL + \"/\" || \"/\",\n};\n\nconst localStorageKey = {\n  lastWallet: \"lastWallet\",\n  lastChainId: \"lastChainId\",\n  transactionSetting: \"transactionSetting\",\n};\n\nconst erc = parseInt(process.env.REACT_APP_ERC_CHAIN || \"1\", 10);\nconst bep = parseInt(process.env.REACT_APP_BEP_CHAIN || \"56\", 10);\nconst polygon = parseInt(process.env.REACT_APP_POLYGON_CHAIN || \"137\", 10);\n\nconst chain = {\n  erc: isNaN(erc) ? 1 : erc,\n  bep: isNaN(bep) ? 56 : bep,\n  polygon: isNaN(polygon) ? 137 : polygon,\n};\n\nexport { config, localStorageKey, chain };\n","import { extendTheme } from \"@chakra-ui/react\";\n\nconst theme = extendTheme({\n  styles: {\n    global: {\n      body: {\n        color: \"#f1f1f2\",\n        fontFamily: `Helvetica Neue, Arial, sans-serif`,\n        bg: \"#131a35\",\n        \"& .chakra-alert__desc\": {\n          color: \"#1A202C\",\n        },\n      },\n    },\n  },\n  colors: {\n    primary: \"#61D9FA\",\n    accent: \"#0D285A\",\n    error: \"#f04f00\",\n  },\n  zIndices: {\n    hide: -1,\n    auto: \"auto\",\n    base: 0,\n    docked: 10,\n    dropdown: 1000,\n    sticky: 1100,\n    banner: 1200,\n    overlay: 1300,\n    modal: 1400,\n    popover: 1500,\n    skipLink: 1600,\n    toast: 1700,\n    tooltip: 1800,\n  },\n});\n\nexport { theme };\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport loadable from \"@loadable/component\";\n\nconst Home = loadable(() => import(\"./pages/Home\"));\n\nfunction MainLayout(props: { children?: React.ReactNode }) {\n  const { children } = props;\n  return <main>{children}</main>;\n}\n\nconst Main = () => {\n  return (\n    <HashRouter>\n      <MainLayout>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n        </Switch>\n      </MainLayout>\n    </HashRouter>\n  );\n};\n\nexport default Main;\n","import create from \"zustand\";\n\nexport type AppStore = {\n  blockNumber: { [chainId: number]: number };\n  setBlockNumber: (chainId: number, block: number) => void;\n};\n\nconst useAppStore = create<AppStore>((set) => ({\n  blockNumber: {},\n  setBlockNumber: (chainId: number, block: number) =>\n    set((state) => ({\n      blockNumber: {\n        ...state.blockNumber,\n        [chainId]: block,\n      },\n    })),\n}));\n\nfunction selectBlockNumber(chainId: number): (state: AppStore) => number {\n  return (state: AppStore) => {\n    return state.blockNumber[chainId] ?? 0;\n  };\n}\n\nfunction selectBlockUpdater(state: AppStore) {\n  return state.setBlockNumber;\n}\n\nexport { useAppStore, selectBlockNumber, selectBlockUpdater };\n","import React from \"react\";\n\nfunction useDebounceValue<T>(value: T, delay: number): T {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = React.useState<T>(value);\n\n  React.useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n\n  return debouncedValue;\n}\n\nexport default useDebounceValue;\n","import React from \"react\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { CSSReset } from \"@chakra-ui/css-reset\";\nimport { theme } from \"./theme\";\nimport WalletProvider from \"./providers/WalletProvider\";\nimport AppProvider from \"./providers/AppProvider\";\nimport Main from \"./Main\";\nimport { useAutoUpdateBlockNumber } from \"./hooks/app\";\n\nfunction getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider);\n  library.pollingInterval = 10000;\n  return library;\n}\n\nfunction Updater() {\n  useAutoUpdateBlockNumber();\n  return null;\n}\n\nfunction App() {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <ChakraProvider theme={theme}>\n        <WalletProvider>\n          <AppProvider>\n            <CSSReset />\n            <Main />\n            <Updater />\n          </AppProvider>\n        </WalletProvider>\n      </ChakraProvider>\n    </Web3ReactProvider>\n  );\n}\n\nexport default App;\n","import useIsWindowVisible from \"../window\";\nimport useWallet from \"../useWallet\";\nimport React from \"react\";\nimport {\n  selectBlockNumber,\n  selectBlockUpdater,\n  useAppStore,\n} from \"../../stores/app\";\nimport useDebounceValue from \"../useDebounceValue\";\n\nexport function useAutoUpdateBlockNumber() {\n  const windowVisible = useIsWindowVisible();\n  const [state, setState] = React.useState<number>(0);\n  const updateBlock = useAppStore(selectBlockUpdater);\n\n  const { ether, chainId } = useWallet();\n\n  const debouncedState = useDebounceValue(state, 100);\n\n  React.useEffect(() => {\n    if (chainId) {\n      updateBlock(chainId, debouncedState);\n    }\n  }, [debouncedState, chainId, updateBlock]);\n\n  React.useEffect(() => {\n    function blockNumberCallback(blockNumber: number) {\n      setState(blockNumber);\n    }\n\n    if (windowVisible && ether) {\n      ether\n        .getBlockNumber()\n        .then(blockNumberCallback)\n        .catch((error) =>\n          // eslint-disable-next-line no-console\n          console.error(\n            `Failed to get block number for chainId: ${chainId}`,\n            error\n          )\n        );\n\n      ether.on(\"block\", blockNumberCallback);\n    }\n    return () => {\n      if (ether) {\n        ether.removeListener(\"block\", blockNumberCallback);\n      }\n    };\n  }, [ether, chainId, windowVisible, updateBlock]);\n}\n\nexport function useBlockNumberCallback(cb: () => void) {\n  const { chainId } = useWallet();\n\n  const block = useAppStore(selectBlockNumber(chainId || 0));\n\n  React.useEffect(() => {\n    cb();\n  }, [block, cb]);\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export * from \"./Box\";\nexport { default } from \"./Box\";\n"],"sourceRoot":""}