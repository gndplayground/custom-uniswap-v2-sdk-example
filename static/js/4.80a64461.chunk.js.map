{"version":3,"sources":["components/AppContainer/AppContainer.tsx","components/ButtonCore/ButtonCore.tsx","hooks/useApp/useApp.ts","components/ModalAccount/ModalAccount.tsx","components/Header/Header.tsx","icons/ArrowDown.tsx","components/LazyImage/LazyImage.tsx","icons/Question.tsx","components/InputToken/InputToken.tsx","utils/regex.ts","icons/ArrowUp.tsx","icons/Setting.tsx","stores/transactionSetting.ts","components/ModalUserSetting/ModalUserSetting.tsx","hooks/useWindowDimension/useWindowDimension.js","utils/tokens/search.ts","utils/address/index.ts","components/TokenRow/TokenRow.tsx","constants/chain.ts","constants/tokens.ts","components/ModalSelectToken/ModalSelectToken.tsx","types/index.ts","hooks/useSimpleQuery/useSimpleQuery.ts","hooks/wallet/index.ts","utils/currency.ts","constants/routing.ts","constants/factory.ts","hooks/pairs/index.ts","utils/tokens/index.ts","hooks/swap/trade.ts","pages/Home/components/SwapFooter/SwapFooter.tsx","hooks/swap/wrap.ts","hooks/useCheckApproval.ts","hooks/swap/swap.ts","utils/maxAmountSpend.ts","pages/Home/components/SwapBoard/SwapBoard.tsx","pages/Home/Home.tsx"],"names":["AppContainer","React","forwardRef","props","ref","maxW","pl","base","sm","md","lg","pr","displayName","ButtonCore","children","isLoading","others","border","borderColor","_hover","color","_focus","_disabled","opacity","cursor","px","display","alignItems","justifyContent","fontWeight","borderRadius","fontSize","lineHeight","textAlign","as","height","xl","ml","width","speed","thickness","useApp","useContext","AppContext","ModalAccount","isOpen","onClose","wallet","useWallet","useState","isCopied","setIsCopied","account","Modal","modalContentProps","maxWidth","bg","minHeight","py","onClick","Close","mt","mr","target","rel","href","chainId","chain","bep","src","config","PUBLIC_URL","alt","text","onCopy","reset","localStorage","removeItem","localStorageKey","lastWallet","lastChainId","Header","toggleAccount","useToggle","app","Box","borderBottom","to","toggleOpenConnect","toggleCallback","balance","etherSymbol","active","setInActive","ArrowDown","xmlns","viewBox","fill","d","LazyImage","placeholder","other","loadError","setLoadError","Fragment","onError","Question","inputRegex","RegExp","InputToken","disabled","label","id","inputProps","selectTokenProps","selectedToken","onUserInput","onMax","showMaxButton","background","htmlFor","flex","outline","onChange","e","value","replace","test","name","logoURI","symbol","aria-hidden","ArrowUp","Setting","defaultSetting","deadline","slippageTolerance","raw","getItem","transactionSetting","data","JSON","parse","console","log","useTransactionSettingStore","create","set","setDeadline","by","state","setSlippageTolerance","subscribe","a","setItem","stringify","ButtonSlip","minWidth","p","transition","InputSlip","type","ModalUserSetting","rawSlip","setRawSlip","rawDeadline","setRawDeadline","errorSlip","setErrorSlip","errorDeadline","setErrorDeadline","handleChangeSlip","v","useEffect","rawValue","Number","isNaN","mx","position","toString","event","parseFloat","right","top","getWindowDimensions","window","innerWidth","innerHeight","ERC20_BYTES32_ABI","constant","inputs","outputs","payable","stateMutability","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","parseBytes32String","provider","defaultAddress","address","getAddress","contract","Contract","ERC20_ABI","contractBytes32","promises","Promise","all","decimals","token","toLowerCase","filterTokens","tokens","search","searchingAddress","isAddress","filter","lowerSearchParts","split","s","matchesSearch","sParts","every","some","sp","startsWith","endsWith","TokenRow","SupportedChainId","selected","otherProps","disable","undefined","BASE_TOKENS","BSC","CAKE","Token","WBNB","DAI","BUSD","BTCB","USDT","UST","ETH","MATIC","WBTC","MAUSDC","ETHER","QUICK","USDC","AVAX","PNG","JOE","USDTe","DAIe","USDCe","ETHER_TOKEN_LIST","isNative","WETH9_EXTENDED","ExtendedEther","this","Error","_cachedEther","Ether","ModalSelectToken","Field","tokenList","onSelectToken","removeTokens","additionalTokenList","ether","searchToken","setSearchToken","searchQuery","setSearchQuery","query","disableAutoCall","isFailed","isFetched","isFetching","result","error","setState","fetch","useCallback","current","then","r","catch","useSimpleQuery","useMemo","resolve","reject","axios","get","t","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","getToken","handleSelectToken","heightList","itemKey","index","Row","style","isSelected","etherToken","filteredTokens","arr","Object","values","sort","b","indexOf","listToken","maxHeight","padding","input","overflow","itemData","itemCount","itemSize","useTokenBalances","amounts","setAmount","update","operations","forEach","isToken","push","Interface","ERC20","balanceOf","amount","CurrencyAmount","fromRawAmount","JSBI","BigInt","reduce","rt","c","timer","setInterval","clearInterval","formatCurrencyAmount","sigFigs","equal","quotient","divide","decimalScale","lessThan","Fraction","toSignificant","ROUTERS","PANCAKE_ROUTER","QUICK_SWAP_ROUTER","TRADER_JOE_ROUTER","WETH_ONLY","BASES_TO_CHECK_TRADES_AGAINST","ADDITIONAL_BASES","CUSTOM_BASES","FEES_NUMERATORS","FEES_DENOMINATORS","FACTORY_ADDRESSES","INIT_CODE_HASHES","PANCAKE_CODE_HASH","QUICK_SWAP_CODE_HASH","TRADER_JOE_CODE_HASH","PairState","PAIR_INTERFACE","IUniswapV2PairABI","abi","useAllCommonPairs","currencyA","currencyB","allPairs","currencies","windowVisible","useIsWindowVisible","setResult","map","wrapped","pairAddresses","tokenA","tokenB","equals","computePairAddress","initCodeHash","factoryAddress","getData","allPromise","pa","getReserves","i","INVALID","NOT_EXISTS","fc","hash","reserve0","reserve1","sortsBefore","token0","token1","EXISTS","Pair","interval","usePairs","bases","common","additionalA","additionalB","basePairs","flatMap","otherBase","Boolean","t0","t1","customBases","customBasesA","customBasesB","find","useAllCurrencyCombinations","memo","curr","liquidityToken","getTokenSymbol","BIPS_BASE","ZERO_PERCENT","Percent","ONE_HUNDRED_PERCENT","BETTER_TRADE_LESS_HOPS_THRESHOLD","INPUT_FRACTION_AFTER_FEES","subtract","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","inputAmount","currency","outputAmount","equalTo","executionPrice","asFraction","multiply","add","tryParseAmount","typedValueParsed","parseUnits","debug","useTrade","options","typedValue","independentField","fields","inputCurrency","INPUT","outputCurrency","OUTPUT","isExactIn","parsedAmount","bestTradeExactIn","currencyAmountIn","currencyOut","maxHops","allowedPairs","Trade","maxNumResults","bestTradeSoFar","currentTrade","useV2TradeExactIn","bestTradeExactOut","currencyIn","currencyAmountOut","useV2TradeExactOut","trade","useTradePriceSummary","slippageAdjustedAmounts","allowedSlippage","num","pct","maximumAmountIn","minimumAmountOut","computeSlippageAdjustedAmounts","realizedLPFee","fractionAfterFee","route","pairs","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","computeTradePriceBreakdown","priceImpactPer","realizedLpFeePercent","percent","computeRealizedLPFeePercent","receivedTitle","TradeType","EXACT_INPUT","received","receivedSymbol","ONE_BIPS","toFixed","fee","path","styles","marginTop","marginLeft","marginRight","SwapFooter","WrapType","NOT_APPLICABLE","wrapType","ApprovalState","useCheckApproval","spender","toast","useToast","pending","setApprovalPending","approved","setApproved","tokenCheck","getSigner","approve","estimateGas","MaxUint256","estimatedGas","gasLimit","trans","wait","description","status","approvalState","APPROVED","PENDING","NOT_APPROVED","UNKNOWN","allowance","BigNumber","from","eq","isZero","hexNumberString","calculateGasMargin","mul","div","swapErrorToUserReadableMessage","reason","message","originalError","substr","MIN_NATIVE_CURRENCY_FOR_GAS","parseEther","TokenLists","SwapBoard","toggleSettings","toggleSelectToken","rawBalance","swapState","setSwapState","dependentField","selectedCurrency","rInput","rOutput","tInput","tOutput","onChain","approvalInput","approvalOutput","isApproving","isRequireApprove","balances","selectedCurrencyBalances","formatted","priceSummary","swap","dat","isSwapping","setSwapping","handleSwap","avax","JoeRouter","UNIRouter","swapMethods","Router","swapCallParameters","feeOnTransfer","Math","floor","recipient","ttl","etherMethods","final","parameters","est","errorMessage","methodName","args","swapParameters","err","gasError","callStatic","info","callError","finally","estCall","successEstCall","gasEstimate","tx","inputSymbol","outputSymbol","code","useSwap","isExecuting","setExecuting","weth","eth","inputError","hasInputAmount","greaterThan","sufficientBalance","firstNativeSecondWETH","firstWETHSecondNative","wethContract","WETH_ABI","mess","deposit","withdraw","WRAP","UNWRAP","execute","useWrapCallback","onWrap","wrapInputError","showWrap","parsedAmounts","maxInputAmount","currencyAmount","defaultGas","maxAmountSpend","handleOpenSelectToken","field","openSelect","setActive","hideCurrency","output","formattedAmounts","toExact","aria-label","left","sx","logos","Home","textDecoration"],"mappings":"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","file":"static/js/4.80a64461.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container, ContainerProps } from \"@chakra-ui/layout\";\n\nexport type AppContainerProps = ContainerProps;\n\nconst AppContainer = React.forwardRef<any, AppContainerProps>((props, ref) => {\n  return (\n    <Container\n      maxW=\"1440px\"\n      pl={{ base: \"16px\", sm: \"50px\", md: \"50px\", lg: \"60px\" }}\n      pr={{ base: \"16px\", sm: \"50px\", md: \"50px\", lg: \"60px\" }}\n      {...props}\n      ref={ref}\n    />\n  );\n});\n\nAppContainer.displayName = \"AppContainer\";\n\nexport default AppContainer;\n\nexport { AppContainer };\n","import React from \"react\";\nimport Box from \"../Box\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { HTMLChakraProps } from \"@chakra-ui/system\";\n\nexport interface ButtonCoreProps extends HTMLChakraProps<\"button\"> {\n  children?: React.ReactNode;\n  disabled?: boolean;\n  isLoading?: boolean;\n}\n\nfunction ButtonCore(props: ButtonCoreProps) {\n  const { children, isLoading, ...others } = props;\n\n  return (\n    <Box\n      border=\"1px solid\"\n      borderColor=\"primary\"\n      _hover={{\n        color: \"primary\",\n      }}\n      _focus={{\n        color: \"primary\",\n      }}\n      _disabled={{\n        opacity: \"0.8\",\n        color: \"#ccc\",\n        cursor: \"not-allowed\",\n      }}\n      px=\"16px\"\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      color=\"#fff\"\n      fontWeight={700}\n      borderRadius=\"4px\"\n      fontSize=\"16px\"\n      lineHeight=\"21px\"\n      textAlign=\"center\"\n      as=\"button\"\n      height={{ base: \"32px\", xl: \"40px\" }}\n      {...(others as any)}\n    >\n      {children}\n      {isLoading && (\n        <Box ml=\"8px\" width=\"16px\" height=\"16px\">\n          <Spinner speed=\"1s\" width=\"16px\" height=\"16px\" thickness=\"2px\" />\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nexport default ButtonCore;\n","import { useContext } from \"react\";\nimport { AppContext } from \"../../providers/AppProvider\";\n\nexport default function useApp() {\n  return useContext(AppContext);\n}\n","import React from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { Box } from \"../Box\";\nimport Modal from \"../Modal\";\nimport { chain, config, localStorageKey } from \"../../config\";\nimport Close from \"../../icons/Close\";\nimport useWallet from \"../../hooks/useWallet\";\nimport ButtonCore from \"../ButtonCore\";\n\nexport interface ModalAccountProps {\n  isOpen?: boolean;\n  onClose?: () => void;\n}\n\nfunction ModalAccount(props: ModalAccountProps) {\n  const { isOpen, onClose } = props;\n  const wallet = useWallet();\n  const [isCopied, setIsCopied] = React.useState(false);\n\n  function handleDisconnect() {\n    wallet.reset();\n    localStorage.removeItem(localStorageKey.lastWallet);\n    localStorage.removeItem(localStorageKey.lastChainId);\n    onClose && onClose();\n  }\n\n  if (!wallet.account) {\n    return null;\n  }\n\n  function getScanUrl() {\n    if (wallet.chainId === chain.bep) {\n      return `https://bscscan.com/address/${wallet.account}`;\n    }\n    return `https://etherscan.io/address/${wallet.account}`;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      modalContentProps={{\n        maxWidth: \"600px\",\n      }}\n    >\n      <Box\n        borderRadius=\"30px\"\n        color=\"#fff\"\n        bg=\"#212B54\"\n        maxWidth=\"600px\"\n        width=\"100%\"\n        minHeight=\"300px\"\n        py={{ base: \"24px\", xl: \"40px\" }}\n        px={{\n          base: \"16px\",\n          lg: \"40px\",\n        }}\n      >\n        <Box as=\"header\" display=\"flex\" alignItems=\"center\">\n          <Box\n            as=\"h2\"\n            fontSize={{ base: \"16px\", xl: \"24px\" }}\n            lineHeight=\"35px\"\n            fontWeight={700}\n          >\n            Your Wallet\n          </Box>\n          <Box\n            as=\"button\"\n            ml=\"auto\"\n            color=\"#61D9FA\"\n            fontSize={{ base: \"18px\", xl: \"22px\" }}\n            onClick={onClose}\n          >\n            <Close />\n          </Box>\n        </Box>\n        <Box\n          as=\"p\"\n          mt=\"60px\"\n          fontSize={{ base: \"14px\", xl: \"18px\" }}\n          color=\"#0DE6FF\"\n          textAlign=\"center\"\n        >\n          {wallet.account}\n        </Box>\n        <Box mt=\"20px\" display=\"flex\" justifyContent=\"center\">\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            mr=\"60px\"\n            as=\"a\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={getScanUrl()}\n          >\n            <Box\n              mr=\"12px\"\n              as=\"img\"\n              src={`${config.PUBLIC_URL}images/icon/external-link.svg`}\n              alt=\"\"\n            />\n            View in explorer\n          </Box>\n          <CopyToClipboard\n            text={wallet.account}\n            onCopy={() => {\n              setIsCopied(true);\n            }}\n          >\n            <Box as=\"button\" display=\"flex\" alignItems=\"center\">\n              <Box\n                mr=\"12px\"\n                as=\"img\"\n                src={`${config.PUBLIC_URL}images/icon/copy.svg`}\n                alt=\"\"\n              />\n              Copy address\n            </Box>\n          </CopyToClipboard>\n        </Box>\n        <Box as=\"p\" textAlign=\"center\" mt=\"20px\" color=\"#61D9FA\">\n          {isCopied && <p>Copied address!</p>}\n        </Box>\n        <Box mt=\"70px\" display=\"flex\" justifyContent=\"center\">\n          <ButtonCore\n            width=\"80%\"\n            maxWidth=\"300px\"\n            as=\"button\"\n            onClick={handleDisconnect}\n          >\n            Logout\n          </ButtonCore>\n        </Box>\n      </Box>\n    </Modal>\n  );\n}\n\nexport default ModalAccount;\n","import React from \"react\";\nimport Box from \"../Box/Box\";\nimport useWallet from \"../../hooks/useWallet\";\nimport { Link } from \"react-router-dom\";\nimport { AppContainer } from \"../AppContainer\";\nimport ButtonCore from \"../ButtonCore\";\nimport useToggle from \"../../hooks/useToogle\";\nimport useApp from \"../../hooks/useApp\";\nimport ModalAccount from \"../ModalAccount\";\n\nfunction Header() {\n  const wallet = useWallet();\n  const toggleAccount = useToggle();\n  const app = useApp();\n\n  function handleOpenConnect() {\n    app.toggleOpenConnect();\n  }\n\n  return (\n    <Box as=\"header\" borderBottom=\"2px solid #1c274f\" color=\"#f1f1f2\" py=\"16px\">\n      <AppContainer display=\"flex\" alignItems=\"center\">\n        <Box fontSize=\"24px\" color=\"primary\" fontWeight=\"bold\">\n          <Link to=\"/\">\n            <Box as=\"span\">Multi Chain TM</Box>\n          </Link>\n        </Box>\n        {!wallet.account && (\n          <Box ml=\"auto\">\n            <ButtonCore onClick={handleOpenConnect}>Connect</ButtonCore>\n          </Box>\n        )}\n        {wallet.account && (\n          <ButtonCore ml=\"auto\" onClick={toggleAccount.toggleCallback(true)}>\n            Balance:\n            <Box ml=\"4px\" as=\"span\">\n              <Box as=\"strong\" color=\"primary\">\n                {wallet.balance} {wallet.etherSymbol}\n              </Box>\n            </Box>\n          </ButtonCore>\n        )}\n      </AppContainer>\n      {toggleAccount.active && (\n        <ModalAccount\n          isOpen={toggleAccount.active}\n          onClose={toggleAccount.setInActive}\n        />\n      )}\n    </Box>\n  );\n}\n\nexport default Header;\n","import * as React from \"react\";\n\nfunction ArrowDown(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height=\"1em\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      fill=\"currentColor\"\n      {...props}\n    >\n      <path d=\"M18.928 10.652l.813.892a.97.97 0 01.192.313 1.04 1.04 0 01-.192 1.052l-7.114 7.806a.875.875 0 01-.286.211.81.81 0 01-.674 0 .875.875 0 01-.285-.21l-7.124-7.81a.97.97 0 01-.192-.313 1.042 1.042 0 010-.74.97.97 0 01.192-.312l.812-.892a.88.88 0 01.29-.21.813.813 0 01.682.006c.107.051.204.125.286.218l4.206 4.84V3.956a1.01 1.01 0 01.259-.677.84.84 0 01.62-.28h1.172a.81.81 0 01.337.074c.107.048.204.12.285.209.082.09.147.196.191.313.044.117.067.242.066.369V15.51l4.207-4.848a.877.877 0 01.285-.219.81.81 0 01.683-.005c.108.049.207.122.289.213z\" />\n    </svg>\n  );\n}\n\nexport default ArrowDown;\n","import React from \"react\";\nimport {\n  LazyLoadImage,\n  LazyLoadImageProps,\n} from \"react-lazy-load-image-component\";\n\nexport interface LazyImageProps extends LazyLoadImageProps {\n  src: string;\n  alt: string;\n}\n\nfunction LazyImage(props: LazyImageProps) {\n  const { src, alt, placeholder, ...other } = props;\n\n  const [loadError, setLoadError] = React.useState(false);\n\n  function handleImageError() {\n    setLoadError(true);\n  }\n\n  if (placeholder && loadError) {\n    return <React.Fragment>{placeholder}</React.Fragment>;\n  }\n\n  return (\n    <LazyLoadImage\n      onError={handleImageError}\n      src={src}\n      alt={alt}\n      placeholder={placeholder}\n      {...other}\n    />\n  );\n}\n\nexport default LazyImage;\n","import * as React from \"react\";\n\nfunction Question(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height=\"1em\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      fill=\"currentColor\"\n      {...props}\n    >\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n      <path d=\"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\" />\n    </svg>\n  );\n}\n\nexport default Question;\n","import React from \"react\";\nimport Box, { BoxProps } from \"../Box\";\nimport ButtonCore from \"../ButtonCore\";\nimport ArrowDown from \"../../icons/ArrowDown\";\nimport { TokenListDetail } from \"../../types\";\nimport LazyImage from \"../LazyImage\";\nimport Question from \"../../icons/Question\";\nimport { escapeRegExp } from \"../../utils/regex\";\n\nexport interface InputTokenProps {\n  disabled?: boolean;\n  selectedToken?: TokenListDetail;\n  label: string;\n  balance?: string;\n  id: string;\n  inputProps?: React.AllHTMLAttributes<HTMLInputElement> & BoxProps;\n  selectTokenProps?: React.AllHTMLAttributes<HTMLButtonElement> & BoxProps;\n  onUserInput?: (value: string) => void;\n  onMax?: () => void;\n  showMaxButton?: boolean;\n}\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`); // match escaped \".\" characters via in a non-capturing group\n\nexport default function InputToken(props: InputTokenProps) {\n  const {\n    disabled,\n    label,\n    id,\n    inputProps,\n    balance,\n    selectTokenProps,\n    selectedToken,\n    onUserInput,\n    onMax,\n    showMaxButton,\n  } = props;\n\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const value = e.target.value.replace(/,/g, \".\");\n\n    if (onUserInput && (value === \"\" || inputRegex.test(escapeRegExp(value)))) {\n      onUserInput(value);\n    }\n  }\n\n  return (\n    <Box background=\"#000829\" px=\"16px\" py=\"16px\">\n      <Box display=\"flex\">\n        <Box as=\"label\" fontWeight={500} htmlFor={id} display=\"block\">\n          {label}\n        </Box>\n        {balance && (\n          <Box ml=\"auto\" as=\"p\">\n            Balance:{\" \"}\n            <Box as=\"strong\" color=\"primary\">\n              {balance}\n            </Box>\n          </Box>\n        )}\n      </Box>\n      <Box display=\"flex\" mt=\"8px\">\n        <Box\n          disabled={disabled}\n          flex=\"1\"\n          outline=\"none\"\n          border=\"none\"\n          height=\"40px\"\n          bg=\"transparent\"\n          placeholder=\"0.0\"\n          pr=\"16px\"\n          {...(inputProps as any)}\n          as=\"input\"\n          id={id}\n          onChange={handleChange}\n        />\n        <Box ml=\"auto\" display=\"flex\">\n          {showMaxButton && (\n            <Box\n              as=\"button\"\n              color=\"primary\"\n              onClick={onMax}\n              disabled={disabled}\n            >\n              Max\n            </Box>\n          )}\n          <ButtonCore\n            ml=\"16px\"\n            disabled={disabled}\n            {...(selectTokenProps as any)}\n            display=\"flex\"\n            alignItems=\"center\"\n          >\n            {!selectedToken && \"Select a token\"}\n            {selectedToken && (\n              <Box display=\"flex\" alignItems=\"center\">\n                <Box fontSize=\"26px\" height=\"26px\" width=\"26px\" mr=\"4px\">\n                  <LazyImage\n                    alt={selectedToken.name}\n                    placeholder={<Question />}\n                    src={selectedToken.logoURI}\n                  />\n                </Box>\n                {selectedToken.symbol}\n              </Box>\n            )}\n            <Box ml=\"4px\" as=\"span\" aria-hidden={true}>\n              <ArrowDown />\n            </Box>\n          </ButtonCore>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n","export function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"); // $& means the whole matched string\n}\n","import * as React from \"react\";\n\nfunction ArrowUp(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height=\"1em\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      fill=\"currentColor\"\n      {...props}\n    >\n      <path d=\"M5.072 13.348l-.813-.892a.97.97 0 01-.192-.313 1.04 1.04 0 010-.739.97.97 0 01.192-.313l7.114-7.806a.875.875 0 01.286-.211.81.81 0 01.674 0c.107.049.204.12.285.21l7.124 7.81c.083.09.148.196.192.313a1.043 1.043 0 010 .74.972.972 0 01-.192.312l-.812.892a.88.88 0 01-.29.21.813.813 0 01-.682-.006.884.884 0 01-.286-.218l-4.206-4.84v11.548a1.01 1.01 0 01-.259.677.84.84 0 01-.62.28h-1.172a.812.812 0 01-.337-.074.877.877 0 01-.285-.209.973.973 0 01-.191-.313 1.041 1.041 0 01-.066-.369V8.49l-4.207 4.848a.877.877 0 01-.285.219.81.81 0 01-.683.005.874.874 0 01-.289-.213z\" />\n    </svg>\n  );\n}\n\nexport default ArrowUp;\n","import * as React from \"react\";\n\nfunction Setting(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height={24}\n      viewBox=\"0 0 24 24\"\n      width={24}\n      fill=\"currentColor\"\n      {...props}\n    >\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n      <path d=\"M19.43 12.98c.04-.32.07-.64.07-.98 0-.34-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46a.5.5 0 00-.61-.22l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65A.488.488 0 0014 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1a.566.566 0 00-.18-.03c-.17 0-.34.09-.43.25l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98 0 .33.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46a.5.5 0 00.61.22l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.06.02.12.03.18.03.17 0 .34-.09.43-.25l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zm-1.98-1.71c.04.31.05.52.05.73 0 .21-.02.43-.05.73l-.14 1.13.89.7 1.08.84-.7 1.21-1.27-.51-1.04-.42-.9.68c-.43.32-.84.56-1.25.73l-1.06.43-.16 1.13-.2 1.35h-1.4l-.19-1.35-.16-1.13-1.06-.43c-.43-.18-.83-.41-1.23-.71l-.91-.7-1.06.43-1.27.51-.7-1.21 1.08-.84.89-.7-.14-1.13c-.03-.31-.05-.54-.05-.74s.02-.43.05-.73l.14-1.13-.89-.7-1.08-.84.7-1.21 1.27.51 1.04.42.9-.68c.43-.32.84-.56 1.25-.73l1.06-.43.16-1.13.2-1.35h1.39l.19 1.35.16 1.13 1.06.43c.43.18.83.41 1.23.71l.91.7 1.06-.43 1.27-.51.7 1.21-1.07.85-.89.7.14 1.13zM12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\" />\n    </svg>\n  );\n}\n\nexport default Setting;\n","import create from \"zustand\";\nimport { localStorageKey } from \"../config\";\n\nexport type TransactionSetting = {\n  deadline: number;\n  slippageTolerance: number;\n  setDeadline: (by: number) => void;\n  setSlippageTolerance: (by: number) => void;\n};\n\nconst defaultSetting = {\n  deadline: 1200,\n  slippageTolerance: 50,\n};\n\ntry {\n  const raw = localStorage.getItem(localStorageKey.transactionSetting);\n  if (raw) {\n    const data = JSON.parse(raw ?? \"\");\n    defaultSetting.deadline = data.deadline;\n    defaultSetting.slippageTolerance = data.slippageTolerance;\n  }\n} catch (e) {\n  // eslint-disable-next-line no-console\n  console.log(\"Parse transaction setting fail\");\n}\n\nconst useTransactionSettingStore = create<TransactionSetting>((set) => ({\n  ...defaultSetting,\n  setDeadline: (by) =>\n    set((state) => {\n      return {\n        ...state,\n        deadline: by,\n      };\n    }),\n  setSlippageTolerance: (by) =>\n    set((state) => {\n      return {\n        ...state,\n        slippageTolerance: by,\n      };\n    }),\n}));\n\nuseTransactionSettingStore.subscribe(\n  (a) => {\n    localStorage.setItem(localStorageKey.transactionSetting, JSON.stringify(a));\n  },\n  (state) => {\n    return {\n      deadline: state.deadline,\n      slippageTolerance: state.slippageTolerance,\n    };\n  }\n);\n\nexport const transactionSettingSelectors = {\n  deadline: (state: TransactionSetting) => state.deadline,\n  slippageTolerance: (state: TransactionSetting) => state.slippageTolerance,\n};\n\nexport { useTransactionSettingStore };\n","import React from \"react\";\nimport { Box, BoxProps } from \"../Box\";\nimport Modal from \"../Modal\";\nimport Close from \"../../icons/Close\";\nimport { useTransactionSettingStore } from \"../../stores/transactionSetting\";\n\nexport interface ModalUserSettingProps {\n  isOpen?: boolean;\n  onClose?: () => void;\n}\n\nconst MAX_SLIPPAGE = 5000;\nconst RISKY_SLIPPAGE_LOW = 50;\nconst RISKY_SLIPPAGE_HIGH = 500;\n\nfunction ButtonSlip(props: BoxProps & { active?: boolean }) {\n  const { active, children, ...others } = props;\n  return (\n    <Box\n      minWidth=\"50px\"\n      textAlign=\"center\"\n      as=\"button\"\n      border=\"1px solid\"\n      bg={active ? \"primary\" : \"transparent\"}\n      color={active ? \"accent\" : \"inherit\"}\n      borderRadius=\"8px\"\n      p=\"2px 4px\"\n      transition=\"all 300ms ease-in\"\n      _hover={{\n        bg: \"primary\",\n      }}\n      {...others}\n    >\n      {children}\n    </Box>\n  );\n}\n\nfunction InputSlip(props: React.HTMLProps<HTMLInputElement> & BoxProps) {\n  return (\n    <Box\n      type=\"number\"\n      width=\"100%\"\n      outline=\"none\"\n      textAlign=\"right\"\n      as=\"input\"\n      border=\"1px solid\"\n      borderRadius=\"8px\"\n      p=\"2px 8px\"\n      color=\"accent\"\n      {...props}\n    >\n      {props.children}\n    </Box>\n  );\n}\n\nfunction ModalUserSetting(props: ModalUserSettingProps) {\n  const { isOpen, onClose } = props;\n\n  const { slippageTolerance, deadline, setSlippageTolerance, setDeadline } =\n    useTransactionSettingStore();\n\n  const [rawSlip, setRawSlip] = React.useState(slippageTolerance / 100);\n\n  const [rawDeadline, setRawDeadline] = React.useState(deadline / 60);\n\n  const [errorSlip, setErrorSlip] = React.useState<string | null>(null);\n\n  const [errorDeadline, setErrorDeadline] = React.useState<string | null>(null);\n\n  function handleChangeSlip(v: number) {\n    return () => {\n      setRawSlip(v);\n    };\n  }\n\n  function handleChangeInputSlip(event: React.ChangeEvent<HTMLInputElement>) {\n    setRawSlip(parseFloat(event.target.value));\n  }\n\n  function handleChangeDeadline(event: React.ChangeEvent<HTMLInputElement>) {\n    setRawDeadline(parseFloat(event.target.value));\n  }\n\n  React.useEffect(() => {\n    try {\n      const rawValue = rawSlip * 100;\n      if (!Number.isNaN(rawValue) && rawValue > 0 && rawValue < MAX_SLIPPAGE) {\n        setSlippageTolerance(rawValue);\n        setErrorSlip(null);\n      } else {\n        setErrorSlip(\"Enter a valid slippage percentage\");\n      }\n    } catch {\n      setErrorSlip(\"Enter a valid slippage percentage\");\n    }\n  }, [rawSlip, setSlippageTolerance]);\n\n  React.useEffect(() => {\n    try {\n      const rawValue = rawDeadline * 60;\n      if (!Number.isNaN(rawValue) && rawValue > 0) {\n        setDeadline(rawValue);\n        setErrorDeadline(null);\n      } else {\n        setErrorDeadline(\"Enter a valid deadline\");\n      }\n    } catch {\n      setErrorDeadline(\"Enter a valid deadline\");\n    }\n  }, [rawDeadline, setDeadline]);\n\n  // Notify user if slippage is risky\n  React.useEffect(() => {\n    if (slippageTolerance < RISKY_SLIPPAGE_LOW) {\n      setErrorSlip(\"Your transaction may fail\");\n    } else if (slippageTolerance > RISKY_SLIPPAGE_HIGH) {\n      setErrorSlip(\"Your transaction may be frontrun\");\n    }\n  }, [slippageTolerance]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      modalContentProps={{\n        maxWidth: \"600px\",\n      }}\n    >\n      <Box\n        borderRadius=\"30px\"\n        color=\"#fff\"\n        bg=\"#212B54\"\n        maxWidth=\"600px\"\n        width=\"100%\"\n        minHeight=\"300px\"\n        py={{ base: \"24px\", xl: \"40px\" }}\n        px={{\n          base: \"16px\",\n          lg: \"40px\",\n        }}\n      >\n        <Box as=\"header\" display=\"flex\" alignItems=\"center\">\n          <Box\n            as=\"h2\"\n            fontSize={{ base: \"16px\", xl: \"24px\" }}\n            lineHeight=\"35px\"\n            fontWeight={700}\n          >\n            Transaction settings\n          </Box>\n          <Box\n            as=\"button\"\n            ml=\"auto\"\n            color=\"#61D9FA\"\n            fontSize={{ base: \"18px\", xl: \"22px\" }}\n            onClick={onClose}\n          >\n            <Close />\n          </Box>\n        </Box>\n        <Box>\n          <Box mt=\"6px\">\n            <Box as=\"h3\" mt=\"16px\">\n              Slippage tolerance\n            </Box>\n            <Box display=\"flex\" mt=\"6px\">\n              <ButtonSlip\n                active={rawSlip === 0.1}\n                onClick={handleChangeSlip(0.1)}\n              >\n                0.1%\n              </ButtonSlip>\n              <Box mx=\"8px\">\n                <ButtonSlip\n                  active={rawSlip === 0.5}\n                  onClick={handleChangeSlip(0.5)}\n                >\n                  0.5%\n                </ButtonSlip>\n              </Box>\n              <ButtonSlip active={rawSlip === 1} onClick={handleChangeSlip(1)}>\n                1%\n              </ButtonSlip>\n              <Box ml=\"8px\" color=\"accent\" position=\"relative\">\n                <InputSlip\n                  pr=\"24px\"\n                  value={rawSlip.toString()}\n                  onChange={handleChangeInputSlip}\n                />\n                <Box position=\"absolute\" right=\"8px\" top=\"2px\" as=\"span\">\n                  %\n                </Box>\n              </Box>\n            </Box>\n            <Box mt=\"6px\" as=\"p\" color=\"error\">\n              {errorSlip}\n            </Box>\n          </Box>\n          <Box mt=\"6px\">\n            <Box as=\"h3\" mt=\"16px\">\n              Transaction deadline\n            </Box>\n            <Box display=\"flex\" mt=\"6px\" alignItems=\"center\">\n              <InputSlip\n                width=\"60px\"\n                mr=\"8px\"\n                onChange={handleChangeDeadline}\n                value={rawDeadline.toString()}\n              />\n              Minutes\n            </Box>\n            <Box mt=\"6px\" as=\"p\" color=\"error\">\n              {errorDeadline}\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n    </Modal>\n  );\n}\n\nexport default ModalUserSetting;\n","import { useState, useEffect } from \"react\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import { Signer } from \"@ethersproject/abstract-signer\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { parseBytes32String } from \"@ethersproject/strings\";\nimport { TokenListDetail } from \"../../types\";\nimport ERC20_ABI from \"../../config/abis/erc20.json\";\nimport { isAddress } from \"../address\";\n\nconst ERC20_BYTES32_ABI = [\n  {\n    constant: true,\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/;\n\nfunction parseStringOrBytes32(\n  str: string | undefined,\n  bytes32: string | undefined,\n  defaultValue: string\n): string {\n  return str && str.length > 0\n    ? str\n    : bytes32 && BYTES32_REGEX.test(bytes32)\n    ? parseBytes32String(bytes32)\n    : defaultValue;\n}\n\nexport async function getToken(\n  provider: Signer | Provider,\n  data: {\n    address: string;\n    chainId: number;\n  }\n): Promise<TokenListDetail | undefined> {\n  const { address: defaultAddress, chainId } = data;\n\n  const address = getAddress(defaultAddress);\n\n  if (!address) return;\n\n  try {\n    const contract = new Contract(address, ERC20_ABI, provider);\n\n    const contractBytes32 = new Contract(address, ERC20_BYTES32_ABI, provider);\n\n    const promises = Promise.all<string, string, string, string, number>([\n      contract.name(),\n      contractBytes32.name(),\n      contract.symbol(),\n      contractBytes32.symbol(),\n      contract.decimals(),\n    ]);\n\n    const d = await promises;\n\n    const token: TokenListDetail = {\n      name: parseStringOrBytes32(d[0], d[1], \"Unknown Token\"),\n      symbol: parseStringOrBytes32(d[2], d[3], \"Unknown Token\"),\n      chainId: chainId,\n      address: address.toLowerCase(),\n      decimals: d[4],\n      logoURI: \"\",\n    };\n\n    return token;\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log(e);\n    return;\n  }\n}\n\nexport function filterTokens(\n  tokens: TokenListDetail[],\n  search: string\n): TokenListDetail[] {\n  if (search.length === 0) return tokens;\n\n  const searchingAddress = isAddress(search);\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress);\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0);\n\n  if (lowerSearchParts.length === 0) {\n    return tokens;\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((str) => str.length > 0);\n\n    return lowerSearchParts.every(\n      (p) =>\n        p.length === 0 ||\n        sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p))\n    );\n  };\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token;\n\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name));\n  });\n}\n","import { getAddress } from \"@ethersproject/address\";\n\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value);\n  } catch {\n    return false;\n  }\n}\n","import React from \"react\";\nimport { TokenListDetail } from \"../../types\";\nimport Box, { BoxProps } from \"../Box\";\nimport LazyImage from \"../LazyImage\";\nimport Question from \"../../icons/Question\";\n\nexport interface TokenRowProps extends BoxProps {\n  token: TokenListDetail;\n  selected?: boolean;\n}\n\nfunction TokenRow(props: TokenRowProps) {\n  const { token, selected, ...otherProps } = props;\n  return (\n    <Box py=\"8px\" display=\"flex\" alignItems=\"center\">\n      <Box\n        as=\"button\"\n        width=\"100%\"\n        bg=\"transparent\"\n        display=\"flex\"\n        alignItems=\"center\"\n        disable={selected || undefined}\n        {...otherProps}\n      >\n        <Box fontSize=\"40px\" width=\"40px\" height=\"40px\" mr=\"16px\">\n          {!token.logoURI && <Question />}\n          {token.logoURI && (\n            <LazyImage\n              placeholder={<Question />}\n              src={token.logoURI}\n              alt={token.name}\n            />\n          )}\n        </Box>\n        <Box textAlign=\"left\">\n          <strong>{token.symbol}</strong>\n          <p>{token.name}</p>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default TokenRow;\n","export enum SupportedChainId {\n  BSC = 56,\n  MATIC = 137,\n  AVAX = 43114,\n}\n","import { Token, Ether } from \"@uniswap/sdk-core\";\nimport { TokenListDetail } from \"../types\";\nimport { SupportedChainId } from \"./chain\";\nimport { config } from \"../config\";\n\nexport const BASE_TOKENS = {\n  [SupportedChainId.BSC]: {\n    CAKE: new Token(\n      SupportedChainId.BSC,\n      \"0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\",\n      18,\n      \"CAKE\",\n      \"PancakeSwap Token\"\n    ),\n    WBNB: new Token(\n      SupportedChainId.BSC,\n      \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\",\n      18,\n      \"WBNB\",\n      \"Wrapped BNB\"\n    ),\n    DAI: new Token(\n      SupportedChainId.BSC,\n      \"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3\",\n      18,\n      \"DAI\",\n      \"Dai Stablecoin\"\n    ),\n    BUSD: new Token(\n      SupportedChainId.BSC,\n      \"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\",\n      18,\n      \"BUSD\",\n      \"Binance USD\"\n    ),\n    BTCB: new Token(\n      SupportedChainId.BSC,\n      \"0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c\",\n      18,\n      \"BTCB\",\n      \"Binance BTC\"\n    ),\n    USDT: new Token(\n      SupportedChainId.BSC,\n      \"0x55d398326f99059fF775485246999027B3197955\",\n      18,\n      \"USDT\",\n      \"Tether USD\"\n    ),\n    UST: new Token(\n      SupportedChainId.BSC,\n      \"0x23396cF899Ca06c4472205fC903bDB4de249D6fC\",\n      18,\n      \"UST\",\n      \"Wrapped UST Token\"\n    ),\n    ETH: new Token(\n      SupportedChainId.BSC,\n      \"0x2170Ed0880ac9A755fd29B2688956BD959F933F8\",\n      18,\n      \"ETH\",\n      \"Binance-Peg Ethereum Token\"\n    ),\n  },\n  [SupportedChainId.MATIC]: {\n    WBTC: new Token(\n      SupportedChainId.MATIC,\n      \"0x1BFD67037B42Cf73acF2047067bd4F2C47D9BfD6\",\n      18,\n      \"wBTC\",\n      \"Wrapped Bitcoin\"\n    ),\n    MAUSDC: new Token(\n      SupportedChainId.MATIC,\n      \"0x9719d867A500Ef117cC201206B8ab51e794d3F82\",\n      6,\n      \"maUSDC\",\n      \"Matic Aave interest bearing USDC\"\n    ),\n    ETHER: new Token(\n      SupportedChainId.MATIC,\n      \"0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619\",\n      18,\n      \"ETH\",\n      \"Ether\"\n    ),\n    QUICK: new Token(\n      SupportedChainId.MATIC,\n      \"0x831753DD7087CaC61aB5644b308642cc1c33Dc13\",\n      18,\n      \"QUICK\",\n      \"QuickSwap\"\n    ),\n    DAI: new Token(\n      SupportedChainId.MATIC,\n      \"0x8f3cf7ad23cd3cadbd9735aff958023239c6a063\",\n      18,\n      \"DAI\",\n      \"Dai Stablecoin\"\n    ),\n    BTCB: new Token(\n      SupportedChainId.MATIC,\n      \"0x1bfd67037b42cf73acf2047067bd4f2c47d9bfd6\",\n      8,\n      \"WBTC\",\n      \"Wrapped BTC\"\n    ),\n\n    USDT: new Token(\n      SupportedChainId.MATIC,\n      \"0xc2132d05d31c914a87c6611c10748aeb04b58e8f\",\n      6,\n      \"USDT\",\n      \"Tether USD\"\n    ),\n    USDC: new Token(\n      SupportedChainId.MATIC,\n      \"0x2791bca1f2de4661ed88a30c99a7a9449aa84174\",\n      6,\n      \"USDC\",\n      \"USD Coin\"\n    ),\n  },\n  [SupportedChainId.AVAX]: {\n    PNG: new Token(\n      SupportedChainId.AVAX,\n      \"0x60781C2586D68229fde47564546784ab3fACA982\",\n      18,\n      \"PNG\",\n      \"Pangolin\"\n    ),\n    JOE: new Token(\n      SupportedChainId.AVAX,\n      \"0x6e84a6216eA6dACC71eE8E6b0a5B7322EEbC0fDd\",\n      18,\n      \"JOE\",\n      \"JOE Token\"\n    ),\n    USDTe: new Token(\n      SupportedChainId.AVAX,\n      \"0xc7198437980c041c805A1EDcbA50c1Ce5db95118\",\n      6,\n      \"USDT.e\",\n      \"Tether USD\"\n    ),\n    DAIe: new Token(\n      SupportedChainId.AVAX,\n      \"0xd586E7F844cEa2F87f50152665BCbc2C279D8d70\",\n      18,\n      \"DAI.e\",\n      \"Dai Stablecoin\"\n    ),\n    USDCe: new Token(\n      SupportedChainId.AVAX,\n      \"0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664\",\n      6,\n      \"USDC.e\",\n      \"USD Coin\"\n    ),\n  },\n};\n\nexport const ETHER_TOKEN_LIST: { [chainId: number]: TokenListDetail } = {\n  [SupportedChainId.BSC]: {\n    chainId: SupportedChainId.BSC,\n    symbol: \"BNB\",\n    name: \"BNB Token\",\n    decimals: 18,\n    address: \"\",\n    logoURI: `${config.PUBLIC_URL}images/icon/tokens/bnb.png`,\n    isNative: true,\n  },\n  [SupportedChainId.MATIC]: {\n    chainId: SupportedChainId.MATIC,\n    symbol: \"MATIC\",\n    name: \"MATIC Token\",\n    decimals: 18,\n    address: \"\",\n    logoURI: `${config.PUBLIC_URL}images/icon/tokens/matic.svg`,\n    isNative: true,\n  },\n  [SupportedChainId.AVAX]: {\n    chainId: SupportedChainId.AVAX,\n    symbol: \"AVAX\",\n    name: \"AVAX Token\",\n    decimals: 18,\n    address: \"\",\n    logoURI: `${config.PUBLIC_URL}images/icon/tokens/avax.svg`,\n    isNative: true,\n  },\n};\n\nexport const WETH9_EXTENDED: { [chainId: number]: Token } = {\n  [SupportedChainId.BSC]: new Token(\n    SupportedChainId.BSC,\n    \"0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c\",\n    18,\n    \"WBNB\",\n    \"Wrapped BNB\"\n  ),\n  [SupportedChainId.MATIC]: new Token(\n    SupportedChainId.MATIC,\n    \"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270\",\n    18,\n    \"WMATIC\",\n    \"Wrapped MATIC\"\n  ),\n  [SupportedChainId.AVAX]: new Token(\n    SupportedChainId.AVAX,\n    \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\",\n    18,\n    \"WAVAX\",\n    \"Wrapped AVAX\"\n  ),\n};\n\nexport class ExtendedEther extends Ether {\n  public get wrapped(): Token {\n    if (this.chainId in WETH9_EXTENDED) return WETH9_EXTENDED[this.chainId];\n    throw new Error(\"Unsupported chain ID\");\n  }\n\n  private static _cachedEther: { [chainId: number]: ExtendedEther } = {};\n\n  public static onChain(chainId: number): ExtendedEther {\n    return (\n      this._cachedEther[chainId] ??\n      (this._cachedEther[chainId] = new ExtendedEther(chainId))\n    );\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport { FixedSizeList } from \"react-window\";\nimport { TokenList, TokenListDetail } from \"../../types\";\nimport useWallet from \"../../hooks/useWallet\";\nimport useSimpleQuery from \"../../hooks/useSimpleQuery\";\nimport { isAddress } from \"ethers/lib/utils\";\nimport useWindowDimensions from \"../../hooks/useWindowDimension\";\nimport { filterTokens, getToken } from \"../../utils/tokens/search\";\nimport Modal from \"../Modal\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport TokenRow from \"../TokenRow\";\nimport Box from \"../Box\";\nimport Close from \"../../icons/Close\";\nimport { ETHER_TOKEN_LIST } from \"../../constants/tokens\";\n\nexport interface ModalSelectTokenProps {\n  selectedToken?: string;\n  removeTokens?: string[];\n  tokenList: string | TokenListDetail[];\n  isOpen?: boolean;\n  onClose?: () => void;\n  onSelectToken?: (token: TokenListDetail) => void;\n  additionalTokenList?: TokenListDetail[];\n}\n\nfunction ModalSelectToken(props: ModalSelectTokenProps) {\n  const {\n    isOpen,\n    onClose,\n    tokenList,\n    selectedToken,\n    onSelectToken,\n    removeTokens,\n    additionalTokenList,\n  } = props;\n  const { chainId, ether: provider } = useWallet();\n\n  const [searchToken, setSearchToken] = React.useState<\n    TokenListDetail | undefined\n  >();\n\n  const [searchQuery, setSearchQuery] = React.useState<string>(\"\");\n\n  const memoQuery = React.useMemo(() => {\n    if (typeof tokenList !== \"string\") {\n      return new Promise<TokenListDetail[]>((resolve) => {\n        resolve(tokenList);\n      });\n    }\n    return new Promise<TokenListDetail[]>((resolve, reject) => {\n      // Should cache in store\n      axios\n        .get<TokenList>(tokenList)\n        .then((d) => {\n          resolve(\n            d.data.tokens.filter((t) => {\n              return t.chainId === chainId;\n            })\n          );\n        })\n        .catch((e) => {\n          reject(e);\n        });\n    });\n  }, [chainId, tokenList]);\n\n  const { fetch, isFetched, result } = useSimpleQuery<TokenListDetail[]>(\n    memoQuery,\n    {\n      disableAutoCall: true,\n    }\n  );\n\n  const { height } = useWindowDimensions();\n\n  React.useEffect(() => {\n    setSearchToken(undefined);\n\n    const address = isAddress(searchQuery);\n\n    if (searchQuery && address && provider && chainId) {\n      getToken(provider, {\n        address: searchQuery,\n        chainId,\n      })\n        .then((t) => {\n          setSearchToken(t);\n        })\n        .catch((e) => {\n          // eslint-disable-next-line no-console\n          console.log(\"Failed search token: \" + e);\n          setSearchToken(undefined);\n        });\n    }\n  }, [chainId, searchQuery, provider]);\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const input = event.target.value;\n    setSearchQuery(input);\n  };\n\n  const handleSelectToken = React.useCallback(\n    (t: TokenListDetail) => {\n      return () => {\n        if (onSelectToken && onClose) {\n          onClose();\n          onSelectToken(t);\n        }\n      };\n    },\n    [onClose, onSelectToken]\n  );\n\n  React.useEffect(() => {\n    if (isOpen && tokenList) {\n      fetch();\n    }\n  }, [tokenList, isOpen, fetch]);\n\n  const heightList = React.useMemo(() => {\n    return (height * 80) / 100 - 300;\n  }, [height]);\n\n  const itemKey = React.useCallback(\n    (index: number, data: TokenListDetail[]) =>\n      data[index].symbol + \"-\" + data[index].address,\n    []\n  );\n\n  const Row = React.useCallback(\n    ({ data, index, style }) => {\n      const t: TokenListDetail = data[index];\n      const isSelected =\n        t.address.toLowerCase() === selectedToken?.toLowerCase();\n      return (\n        <li key={`${t.symbol}-${t.address}`} style={style}>\n          <TokenRow\n            selected={isSelected}\n            token={t}\n            onClick={!isSelected ? handleSelectToken(t) : undefined}\n          />\n        </li>\n      );\n    },\n    [handleSelectToken, selectedToken]\n  );\n\n  const etherToken = React.useMemo(() => {\n    if (chainId) {\n      return ETHER_TOKEN_LIST[chainId];\n    }\n  }, [chainId]);\n\n  const filteredTokens: TokenListDetail[] = React.useMemo(() => {\n    let arr = Object.values(result || []).sort((a, b) => {\n      return a.symbol > b.symbol ? 1 : 0;\n    });\n\n    arr = [\n      ...(etherToken ? [etherToken] : []),\n      ...(additionalTokenList || []),\n      ...arr,\n    ].filter((t) => {\n      if (!removeTokens) {\n        return true;\n      }\n      return removeTokens.indexOf(t.address) === -1;\n    });\n\n    return filterTokens(arr, searchQuery);\n  }, [result, additionalTokenList, searchQuery, removeTokens, etherToken]);\n\n  const listToken = searchToken ? [searchToken] : filteredTokens;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      modalContentProps={{\n        maxWidth: \"600px\",\n      }}\n    >\n      <Box\n        borderRadius=\"30px\"\n        color=\"#fff\"\n        bg=\"#212B54\"\n        maxWidth=\"600px\"\n        width=\"100%\"\n        minHeight=\"300px\"\n        py={{ base: \"24px\", xl: \"40px\" }}\n        px={{\n          base: \"16px\",\n          lg: \"40px\",\n        }}\n        maxHeight=\"80vh\"\n      >\n        <Box as=\"header\" display=\"flex\" alignItems=\"center\">\n          <Box\n            as=\"h2\"\n            fontSize={{ base: \"16px\", xl: \"24px\" }}\n            lineHeight=\"35px\"\n            fontWeight={700}\n          >\n            Select Token\n          </Box>\n          <Box\n            as=\"button\"\n            ml=\"auto\"\n            color=\"#61D9FA\"\n            fontSize={{ base: \"18px\", xl: \"22px\" }}\n            onClick={onClose}\n          >\n            <Close />\n          </Box>\n        </Box>\n        <Box mt=\"24px\">\n          <Box\n            _hover={{\n              borderColor: \"primary\",\n            }}\n            _focus={{\n              borderColor: \"primary\",\n            }}\n            outline=\"none\"\n            width=\"100%\"\n            as=\"input\"\n            border=\"1px solid\"\n            bg=\"transparent\"\n            height=\"40px\"\n            padding=\"8px 16px\"\n            onChange={handleInput}\n            placeholder=\"Search name or paste address\"\n          />\n        </Box>\n        {!isFetched && (\n          <Box mt=\"24px\" display=\"flex\" justifyContent=\"center\">\n            <Spinner />\n          </Box>\n        )}\n        {result && (\n          <Box as=\"ul\" overflow=\"auto\" mt=\"24px\">\n            <FixedSizeList\n              width=\"100%\"\n              height={heightList}\n              itemData={listToken}\n              itemCount={listToken.length}\n              itemSize={64}\n              itemKey={itemKey}\n            >\n              {Row}\n            </FixedSizeList>\n          </Box>\n        )}\n      </Box>\n    </Modal>\n  );\n}\n\nexport default ModalSelectToken;\n","export interface TokenListDetail {\n  name: string;\n  symbol: string;\n  address: string;\n  chainId: number;\n  decimals: number;\n  logoURI: string;\n  isNative?: boolean;\n}\n\nexport interface TokenListVersion {\n  major: number;\n  minor: number;\n  patch: number;\n}\n\nexport interface TokenList {\n  name: string;\n  timestamp: Date;\n  version: TokenListVersion;\n  logoURI: string;\n  keywords: string[];\n  tokens: TokenListDetail[];\n}\n\nexport enum Field {\n  INPUT = \"INPUT\",\n  OUTPUT = \"OUTPUT\",\n}\n","import React from \"react\";\n\ninterface QueryState<T> {\n  result: T | undefined;\n  error: any | undefined;\n  isFetched: boolean;\n  isFetching: boolean;\n  isFailed: boolean;\n}\n\nexport interface SimpleQueryOptions {\n  disableAutoCall?: boolean;\n}\n\nexport default function useSimpleQuery<T = any>(\n  query: Promise<T>,\n  options: SimpleQueryOptions = {}\n) {\n  const { disableAutoCall } = options;\n  const [state, setState] = React.useState<QueryState<T>>({\n    isFailed: false,\n    isFetched: false,\n    isFetching: false,\n    result: undefined,\n    error: undefined,\n  });\n\n  const fetch = React.useCallback(() => {\n    setState((current) => {\n      return {\n        ...current,\n        isFailed: false,\n        isFetched: current.isFetched || false,\n        isFetching: true,\n      };\n    });\n\n    query\n      .then((r) => {\n        setState((current) => {\n          return {\n            ...current,\n            result: r,\n            isFailed: false,\n            isFetched: true,\n            isFetching: false,\n          };\n        });\n      })\n      .catch((e) => {\n        setState((current) => {\n          return {\n            ...current,\n            error: e,\n            isFailed: true,\n            isFetched: true,\n            isFetching: false,\n          };\n        });\n      });\n  }, [query]);\n\n  React.useEffect(() => {\n    if (!disableAutoCall) {\n      fetch();\n    }\n  }, [disableAutoCall, fetch, query]);\n\n  React.useEffect(() => {\n    setState((current) => {\n      return {\n        ...current,\n        isFetched: false,\n      };\n    });\n  }, [query]);\n\n  return {\n    ...state,\n    fetch,\n  };\n}\n","import { Currency, CurrencyAmount, Token } from \"@uniswap/sdk-core\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { Interface } from \"@ethersproject/abi\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport JSBI from \"jsbi\";\nimport React from \"react\";\nimport ERC20 from \"../../config/abis/erc20.json\";\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | Currency | undefined)[],\n  provider?: Signer | Provider\n) {\n  const [amounts, setAmount] = React.useState<{\n    [address: string]: CurrencyAmount<Token>;\n  }>({});\n\n  const update = React.useCallback(() => {\n    if (address && tokens && provider) {\n      const operations: Promise<{\n        address: string;\n        amount: CurrencyAmount<Token>;\n      }>[] = [];\n      tokens.forEach((t) => {\n        if (t && t.isToken) {\n          operations.push(\n            new Promise((resolve, reject) => {\n              const contract = new Contract(\n                t.address,\n                new Interface(ERC20),\n                provider\n              );\n              if (!contract.balanceOf) {\n                resolve({\n                  address: t.address,\n                  amount: CurrencyAmount.fromRawAmount(t, 0),\n                });\n              } else {\n                contract\n                  .balanceOf(address)\n                  .then((r: string) => {\n                    resolve({\n                      address: t.address,\n                      amount: CurrencyAmount.fromRawAmount(\n                        t,\n                        JSBI.BigInt(r.toString())\n                      ),\n                    });\n                  })\n                  .catch((e: any) => {\n                    reject(e);\n                  });\n              }\n            })\n          );\n        }\n      });\n\n      Promise.all(operations)\n        .then((r) => {\n          setAmount(\n            r.reduce<{ [key: string]: CurrencyAmount<Token> }>((rt, c) => {\n              rt[c.address] = c.amount;\n              return rt;\n            }, {})\n          );\n        })\n        .catch((e) => {\n          // eslint-disable-next-line no-console\n          console.error(\"Failed get balance \" + e);\n        });\n    }\n  }, [address, provider, tokens]);\n\n  React.useEffect(() => {\n    update();\n\n    const timer = setInterval(() => {\n      update();\n    }, 5000);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, [update, tokens]);\n\n  return {\n    amounts,\n    update,\n  };\n}\n","import { Currency, CurrencyAmount, Fraction } from \"@uniswap/sdk-core\";\nimport JSBI from \"jsbi\";\n\nexport function formatCurrencyAmount(\n  amount: CurrencyAmount<Currency> | undefined,\n  sigFigs: number\n) {\n  if (!amount) {\n    return \"-\";\n  }\n\n  if (JSBI.equal(amount.quotient, JSBI.BigInt(0))) {\n    return \"0\";\n  }\n\n  if (amount.divide(amount.decimalScale).lessThan(new Fraction(1, 100000))) {\n    return \"<0.00001\";\n  }\n\n  return amount.toSignificant(sigFigs);\n}\n","import { Token } from \"@uniswap/sdk-core\";\nimport { config } from \"../config\";\nimport { BASE_TOKENS, WETH9_EXTENDED } from \"./tokens\";\nimport { SupportedChainId } from \"./chain\";\nimport JSBI from \"jsbi\";\n\nexport const ROUTERS: { [chainId: number]: string } = {\n  [SupportedChainId.BSC]: config.PANCAKE_ROUTER,\n  [SupportedChainId.MATIC]: config.QUICK_SWAP_ROUTER,\n  [SupportedChainId.AVAX]: config.TRADER_JOE_ROUTER,\n};\n\ntype ChainTokenList = {\n  readonly [chainId: number]: Token[];\n};\n\nconst WETH_ONLY: ChainTokenList = {\n  [SupportedChainId.MATIC]: [WETH9_EXTENDED[SupportedChainId.MATIC]],\n  [SupportedChainId.BSC]: [WETH9_EXTENDED[SupportedChainId.BSC]],\n  [SupportedChainId.AVAX]: [WETH9_EXTENDED[SupportedChainId.AVAX]],\n};\n\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  ...WETH_ONLY,\n  [SupportedChainId.BSC]: [\n    ...WETH_ONLY[SupportedChainId.BSC],\n    BASE_TOKENS[SupportedChainId.BSC].CAKE,\n    BASE_TOKENS[SupportedChainId.BSC].BUSD,\n    BASE_TOKENS[SupportedChainId.BSC].USDT,\n    BASE_TOKENS[SupportedChainId.BSC].BTCB,\n    BASE_TOKENS[SupportedChainId.BSC].UST,\n    BASE_TOKENS[SupportedChainId.BSC].ETH,\n  ],\n  [SupportedChainId.MATIC]: [\n    ...WETH_ONLY[SupportedChainId.MATIC],\n    BASE_TOKENS[SupportedChainId.MATIC].USDC,\n    BASE_TOKENS[SupportedChainId.MATIC].USDT,\n    BASE_TOKENS[SupportedChainId.MATIC].QUICK,\n    BASE_TOKENS[SupportedChainId.MATIC].ETHER,\n    BASE_TOKENS[SupportedChainId.MATIC].WBTC,\n    BASE_TOKENS[SupportedChainId.MATIC].DAI,\n    BASE_TOKENS[SupportedChainId.MATIC].MAUSDC,\n  ],\n  [SupportedChainId.AVAX]: [\n    ...WETH_ONLY[SupportedChainId.AVAX],\n    BASE_TOKENS[SupportedChainId.AVAX].JOE,\n    BASE_TOKENS[SupportedChainId.AVAX].PNG,\n    BASE_TOKENS[SupportedChainId.AVAX].USDTe,\n    BASE_TOKENS[SupportedChainId.AVAX].DAIe,\n    BASE_TOKENS[SupportedChainId.AVAX].USDCe,\n  ],\n};\n\nexport const ADDITIONAL_BASES: {\n  [chainId: number]: { [tokenAddress: string]: Token[] };\n} = {\n  [SupportedChainId.BSC]: {},\n  [SupportedChainId.MATIC]: {},\n  [SupportedChainId.AVAX]: {},\n};\n\nexport const CUSTOM_BASES: {\n  [chainId: number]: { [tokenAddress: string]: Token[] };\n} = {\n  [SupportedChainId.BSC]: {},\n  [SupportedChainId.MATIC]: {},\n  [SupportedChainId.AVAX]: {},\n};\n\nexport const FEES_NUMERATORS: {\n  [chainId: number]: JSBI;\n} = {\n  [SupportedChainId.BSC]: JSBI.BigInt(9975),\n  [SupportedChainId.MATIC]: JSBI.BigInt(997),\n  [SupportedChainId.AVAX]: JSBI.BigInt(997),\n};\n\nexport const FEES_DENOMINATORS: {\n  [chainId: number]: JSBI;\n} = {\n  [SupportedChainId.BSC]: JSBI.BigInt(10000),\n  [SupportedChainId.MATIC]: JSBI.BigInt(1000),\n  [SupportedChainId.AVAX]: JSBI.BigInt(1000),\n};\n","import { config } from \"../config\";\nimport { SupportedChainId } from \"./chain\";\n\nexport const FACTORY_ADDRESSES: {\n  [chainId: number]: string;\n} = {\n  [SupportedChainId.BSC]: \"0xcA143Ce32Fe78f1f7019d7d551a6402fC5350c73\",\n  [SupportedChainId.MATIC]: \"0x5757371414417b8C6CAad45bAeF941aBc7d3Ab32\",\n  [SupportedChainId.AVAX]: \"0x9Ad6C38BE94206cA50bb0d90783181662f0Cfa10\",\n};\n\nexport const INIT_CODE_HASHES: {\n  [chainId: number]: string;\n} = {\n  [SupportedChainId.BSC]: config.PANCAKE_CODE_HASH,\n  [SupportedChainId.MATIC]: config.QUICK_SWAP_CODE_HASH,\n  [SupportedChainId.AVAX]: config.TRADER_JOE_CODE_HASH,\n};\n","import { Currency, CurrencyAmount, Token } from \"@uniswap/sdk-core\";\nimport flatMap from \"lodash.flatmap\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { computePairAddress, Pair } from \"custom-uniswap-v2-sdk\";\nimport IUniswapV2PairABI from \"../../config/abis/IUniswapV2Pair.json\";\nimport React, { useMemo } from \"react\";\nimport useWallet from \"../useWallet\";\nimport {\n  ADDITIONAL_BASES,\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  FEES_DENOMINATORS,\n  FEES_NUMERATORS,\n} from \"../../constants/routing\";\nimport { FACTORY_ADDRESSES, INIT_CODE_HASHES } from \"../../constants/factory\";\nimport { Interface } from \"ethers/lib/utils\";\nimport useIsWindowVisible from \"../window\";\n\nexport function useAllCurrencyCombinations(\n  currencyA?: Currency,\n  currencyB?: Currency\n): [Token, Token][] {\n  const { chainId } = useWallet();\n\n  const [tokenA, tokenB] = chainId\n    ? [currencyA?.wrapped, currencyB?.wrapped]\n    : [undefined, undefined];\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return [];\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? [];\n    const additionalA = tokenA\n      ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? []\n      : [];\n    const additionalB = tokenB\n      ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? []\n      : [];\n\n    return [...common, ...additionalA, ...additionalB];\n  }, [chainId, tokenA, tokenB]);\n\n  const basePairs: [Token, Token][] = useMemo(\n    () =>\n      flatMap(bases, (base): [Token, Token][] =>\n        bases.map((otherBase) => [base, otherBase])\n      ),\n    [bases]\n  );\n\n  return useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] =>\n              Boolean(tokens[0] && tokens[1])\n            )\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA, tokenB]) => {\n              if (!chainId) return true;\n              const customBases = CUSTOM_BASES[chainId];\n\n              const customBasesA: Token[] | undefined =\n                customBases?.[tokenA.address];\n              const customBasesB: Token[] | undefined =\n                customBases?.[tokenB.address];\n\n              if (!customBasesA && !customBasesB) return true;\n\n              if (\n                customBasesA &&\n                !customBasesA.find((base) => tokenB.equals(base))\n              )\n                return false;\n              if (\n                customBasesB &&\n                !customBasesB.find((base) => tokenA.equals(base))\n              )\n                return false;\n\n              return true;\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId]\n  );\n}\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI.abi);\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(\n  currencies: [Currency | undefined, Currency | undefined][]\n) {\n  const windowVisible = useIsWindowVisible();\n  const [result, setResult] = React.useState<[PairState, null | Pair][]>([]);\n\n  const { ether } = useWallet();\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        currencyA?.wrapped,\n        currencyB?.wrapped,\n      ]),\n    [currencies]\n  );\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA &&\n          tokenB &&\n          tokenA.chainId === tokenB.chainId &&\n          !tokenA.equals(tokenB) &&\n          FACTORY_ADDRESSES[tokenA.chainId] &&\n          INIT_CODE_HASHES[tokenA.chainId]\n          ? computePairAddress({\n              initCodeHash: INIT_CODE_HASHES[tokenA.chainId],\n              factoryAddress: FACTORY_ADDRESSES[tokenA.chainId],\n              tokenA,\n              tokenB,\n            })\n          : undefined;\n      }),\n    [tokens]\n  );\n\n  const getData: () => Promise<[PairState, null | Pair][]> =\n    React.useCallback(async () => {\n      const allPromise = pairAddresses.map((pa) => {\n        return new Promise((resolve) => {\n          if (pa && ether) {\n            const contract = new Contract(pa, PAIR_INTERFACE, ether);\n            contract\n              ?.getReserves()\n              .then((r: any) => {\n                resolve(r);\n              })\n              .catch(() => {\n                resolve(undefined);\n              });\n          } else {\n            resolve(undefined);\n          }\n        });\n      });\n\n      const r = await Promise.all(allPromise);\n\n      return r.map((result: any, i) => {\n        const tokenA = tokens[i][0];\n        const tokenB = tokens[i][1];\n\n        if (!tokenA || !tokenB || tokenA.equals(tokenB))\n          return [PairState.INVALID, null];\n        if (!result) return [PairState.NOT_EXISTS, null];\n\n        const fc = FACTORY_ADDRESSES[tokenA.chainId];\n        const hash = INIT_CODE_HASHES[tokenA.chainId];\n\n        const { reserve0, reserve1 } = result;\n\n        const [token0, token1] = tokenA.sortsBefore(tokenB)\n          ? [tokenA, tokenB]\n          : [tokenB, tokenA];\n        return [\n          PairState.EXISTS,\n          new Pair(\n            CurrencyAmount.fromRawAmount(token0, reserve0.toString()),\n            CurrencyAmount.fromRawAmount(token1, reserve1.toString()),\n            fc,\n            hash,\n            FEES_NUMERATORS[tokenA.chainId],\n            FEES_DENOMINATORS[tokenA.chainId]\n          ),\n        ];\n      });\n    }, [ether, pairAddresses, tokens]);\n\n  React.useEffect(() => {\n    if (windowVisible) {\n      getData()\n        .then((r) => {\n          setResult(r);\n        })\n        .catch((e) => {\n          // eslint-disable-next-line no-console\n          console.log(\"Failed get pairs\", e);\n        });\n    }\n  }, [getData, windowVisible]);\n\n  React.useEffect(() => {\n    let interval: ReturnType<typeof setInterval>;\n\n    if (windowVisible) {\n      interval = setInterval(() => {\n        getData()\n          .then((r) => {\n            setResult(r);\n          })\n          .catch((e) => {\n            // eslint-disable-next-line no-console\n            console.log(\"Failed get pairs\", e);\n          });\n      }, 8000);\n    }\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [getData, windowVisible]);\n\n  return result;\n}\n\nexport function useAllCommonPairs(\n  currencyA?: Currency,\n  currencyB?: Currency\n): Pair[] {\n  const allCurrencyCombinations = useAllCurrencyCombinations(\n    currencyA,\n    currencyB\n  );\n\n  const allPairs = usePairs(allCurrencyCombinations);\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] =>\n            Boolean(result[0] === PairState.EXISTS && result[1])\n          )\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] =\n              memo[curr.liquidityToken.address] ?? curr;\n            return memo;\n          }, {})\n      ),\n    [allPairs]\n  );\n}\n","import { Currency } from \"@uniswap/sdk-core\";\nimport { ETHER_TOKEN_LIST } from \"../../constants/tokens\";\n\nexport function getTokenSymbol(\n  token: Currency | undefined,\n  chainId: number\n): string | undefined {\n  if (!token) {\n    return \"\";\n  }\n\n  if (token?.isNative) {\n    return ETHER_TOKEN_LIST[chainId]?.symbol;\n  }\n\n  return token.symbol;\n}\n","import {\n  Currency,\n  CurrencyAmount,\n  Fraction,\n  Percent,\n  TradeType,\n} from \"@uniswap/sdk-core\";\nimport { parseUnits } from \"@ethersproject/units\";\nimport JSBI from \"jsbi\";\nimport { Field } from \"../../types\";\nimport { useAllCommonPairs } from \"../pairs\";\nimport { Trade } from \"custom-uniswap-v2-sdk\";\nimport React, { useMemo } from \"react\";\nimport { SupportedChainId } from \"../../constants/chain\";\nimport useWallet from \"../useWallet\";\nimport { useTransactionSettingStore } from \"../../stores/transactionSetting\";\nimport { getTokenSymbol } from \"../../utils/tokens\";\n\nconst BIPS_BASE = JSBI.BigInt(10000);\n\nconst ZERO_PERCENT = new Percent(\"0\");\n\nconst ONE_HUNDRED_PERCENT = new Percent(\"1\");\n\nconst BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(\n  JSBI.BigInt(50),\n  BIPS_BASE\n);\n\nconst INPUT_FRACTION_AFTER_FEES: { [chainId: number]: Percent } = {\n  [SupportedChainId.BSC]: ONE_HUNDRED_PERCENT.subtract(\n    new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\n  ),\n  [SupportedChainId.MATIC]: ONE_HUNDRED_PERCENT.subtract(\n    new Percent(JSBI.BigInt(30), JSBI.BigInt(10000))\n  ),\n  [SupportedChainId.AVAX]: ONE_HUNDRED_PERCENT.subtract(\n    new Percent(JSBI.BigInt(30), JSBI.BigInt(10000))\n  ),\n};\n\nexport function isTradeBetter(\n  tradeA: Trade<Currency, Currency, TradeType> | undefined | null,\n  tradeB: Trade<Currency, Currency, TradeType> | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT\n): boolean | undefined {\n  if (tradeA && !tradeB) return false;\n  if (tradeB && !tradeA) return true;\n  if (!tradeA || !tradeB) return undefined;\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !tradeA.inputAmount.currency.equals(tradeB.inputAmount.currency) ||\n    !tradeB.outputAmount.currency.equals(tradeB.outputAmount.currency)\n  ) {\n    throw new Error(\"Comparing incomparable trades\");\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice);\n  } else {\n    return tradeA.executionPrice.asFraction\n      .multiply(minimumDelta.add(ONE_HUNDRED_PERCENT))\n      .lessThan(tradeB.executionPrice);\n  }\n}\n\nexport function tryParseAmount<T extends Currency>(\n  value?: string,\n  currency?: T\n): CurrencyAmount<T> | undefined {\n  if (!value || !currency) {\n    return undefined;\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString();\n    if (typedValueParsed !== \"0\") {\n      return CurrencyAmount.fromRawAmount(\n        currency,\n        JSBI.BigInt(typedValueParsed)\n      );\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    // eslint-disable-next-line no-console\n    console.debug(`Failed to parse input amount: \"${value}\"`, error);\n  }\n  // necessary for all paths to return a value\n  return undefined;\n}\n\nconst MAX_HOPS = 3;\n\nexport function useV2TradeExactIn(\n  currencyAmountIn?: CurrencyAmount<Currency>,\n  currencyOut?: Currency,\n  { maxHops = MAX_HOPS } = {}\n): Trade<Currency, Currency, TradeType.EXACT_INPUT> | null {\n  const allowedPairs = useAllCommonPairs(\n    currencyAmountIn?.currency,\n    currencyOut\n  );\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (maxHops === 1) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, {\n            maxHops: 1,\n            maxNumResults: 1,\n          })[0] ?? null\n        );\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade<\n        Currency,\n        Currency,\n        TradeType.EXACT_INPUT\n      > | null = null;\n      for (let i = 1; i <= maxHops; i++) {\n        const currentTrade: Trade<\n          Currency,\n          Currency,\n          TradeType.EXACT_INPUT\n        > | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, {\n            maxHops: i,\n            maxNumResults: 1,\n          })[0] ?? null;\n        // if current trade is best yet, save it\n        if (\n          isTradeBetter(\n            bestTradeSoFar,\n            currentTrade,\n            BETTER_TRADE_LESS_HOPS_THRESHOLD\n          )\n        ) {\n          bestTradeSoFar = currentTrade;\n        }\n      }\n      return bestTradeSoFar;\n    }\n\n    return null;\n    // Force update trade every block\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [allowedPairs, currencyAmountIn, currencyOut, maxHops]);\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useV2TradeExactOut(\n  currencyIn?: Currency,\n  currencyAmountOut?: CurrencyAmount<Currency>,\n  { maxHops = MAX_HOPS } = {}\n): Trade<\n  Currency,\n  Currency,\n  TradeType.EXACT_OUTPUT | TradeType.EXACT_INPUT\n> | null {\n  const allowedPairs = useAllCommonPairs(\n    currencyIn,\n    currencyAmountOut?.currency\n  );\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (maxHops === 1) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, {\n            maxHops: 1,\n            maxNumResults: 1,\n          })[0] ?? null\n        );\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade<\n        Currency,\n        Currency,\n        TradeType.EXACT_OUTPUT\n      > | null = null;\n      for (let i = 1; i <= maxHops; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, {\n            maxHops: i,\n            maxNumResults: 1,\n          })[0] ?? null;\n        if (\n          isTradeBetter(\n            bestTradeSoFar,\n            currentTrade,\n            BETTER_TRADE_LESS_HOPS_THRESHOLD\n          )\n        ) {\n          bestTradeSoFar = currentTrade;\n        }\n      }\n      return bestTradeSoFar;\n    }\n    return null;\n  }, [currencyIn, currencyAmountOut, allowedPairs, maxHops]);\n}\n\nexport function useTrade(options: {\n  independentField: Field;\n  fields: {\n    [Field.INPUT]: Currency | undefined;\n    [Field.OUTPUT]: Currency | undefined;\n  };\n  typedValue: string;\n}) {\n  const { typedValue, independentField, fields } = options;\n\n  const inputCurrency = fields[Field.INPUT];\n\n  const outputCurrency = fields[Field.OUTPUT];\n\n  const isExactIn: boolean = independentField === Field.INPUT;\n\n  const parsedAmount = tryParseAmount(\n    typedValue,\n    (isExactIn ? inputCurrency : outputCurrency) ?? undefined\n  );\n\n  const bestTradeExactIn = useV2TradeExactIn(\n    isExactIn ? parsedAmount : undefined,\n    outputCurrency ?? undefined,\n    {\n      maxHops: undefined,\n    }\n  );\n\n  const bestTradeExactOut = useV2TradeExactOut(\n    inputCurrency ?? undefined,\n    !isExactIn ? parsedAmount : undefined,\n    {\n      maxHops: undefined,\n    }\n  );\n\n  return {\n    trade: isExactIn ? bestTradeExactIn : bestTradeExactOut,\n    parsedAmount,\n  };\n}\n\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade<Currency, Currency, TradeType> | undefined | null,\n  allowedSlippage: number\n): { INPUT?: CurrencyAmount<Currency>; OUTPUT?: CurrencyAmount<Currency> } {\n  function basisPointsToPercent(num: number): Percent {\n    return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000));\n  }\n  const pct = basisPointsToPercent(allowedSlippage);\n  return {\n    INPUT: trade?.maximumAmountIn(pct),\n    OUTPUT: trade?.minimumAmountOut(pct),\n  };\n}\n\nexport function computeRealizedLPFeePercent(\n  trade: Trade<Currency, Currency, TradeType>,\n  fractionAfterFee: Percent\n): Percent {\n  const percent: Percent = ONE_HUNDRED_PERCENT.subtract(\n    trade.route.pairs.reduce<Percent>(\n      (currentFee: Percent): Percent => currentFee.multiply(fractionAfterFee),\n      ONE_HUNDRED_PERCENT\n    )\n  );\n\n  return new Percent(percent.numerator, percent.denominator);\n}\n\nexport function computeTradePriceBreakdown(\n  trade: Trade<Currency, Currency, TradeType> | null | undefined,\n  fractionAfterFee: Percent\n): {\n  priceImpactWithoutFee: Percent | undefined;\n  realizedLPFee: CurrencyAmount<Currency> | undefined | null;\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction =>\n            currentFee.multiply(fractionAfterFee),\n          ONE_HUNDRED_PERCENT\n        )\n      );\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction =\n    trade && realizedLPFee\n      ? trade.priceImpact.subtract(realizedLPFee)\n      : undefined;\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(\n        priceImpactWithoutFeeFraction?.numerator,\n        priceImpactWithoutFeeFraction?.denominator\n      )\n    : undefined;\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    CurrencyAmount.fromRawAmount(\n      trade.inputAmount.currency,\n      realizedLPFee.multiply(trade.inputAmount).quotient\n    );\n\n  return {\n    priceImpactWithoutFee: priceImpactWithoutFeePercent,\n    realizedLPFee: realizedLPFeeAmount,\n  };\n}\n\nexport function useTradePriceSummary(data: {\n  trade:\n    | Trade<Currency, Currency, TradeType.EXACT_OUTPUT | TradeType.EXACT_INPUT>\n    | undefined\n    | null;\n}) {\n  const { chainId } = useWallet();\n\n  const { trade } = data;\n\n  const { slippageTolerance } = useTransactionSettingStore();\n\n  const slippageAdjustedAmounts = React.useMemo(\n    () => computeSlippageAdjustedAmounts(trade, slippageTolerance),\n    [slippageTolerance, trade]\n  );\n\n  const { realizedLPFee } = useMemo(\n    () => computeTradePriceBreakdown(trade, INPUT_FRACTION_AFTER_FEES[chainId]),\n    [trade, chainId]\n  );\n\n  const { priceImpact: priceImpactPer } = useMemo(() => {\n    if (!trade) return { realizedLPFee: undefined, priceImpact: undefined };\n\n    const realizedLpFeePercent = computeRealizedLPFeePercent(\n      trade,\n      INPUT_FRACTION_AFTER_FEES[chainId]\n    );\n    const realizedLPFee = trade.inputAmount.multiply(realizedLpFeePercent);\n    const priceImpact = trade.priceImpact.subtract(realizedLpFeePercent);\n    return { priceImpact, realizedLPFee };\n  }, [trade, chainId]);\n\n  const receivedTitle =\n    trade?.tradeType === TradeType.EXACT_INPUT\n      ? \"Minimum received\"\n      : \"Maximum sent\";\n\n  const received =\n    trade?.tradeType === TradeType.EXACT_INPUT\n      ? slippageAdjustedAmounts[\"OUTPUT\"]?.toSignificant(4) ?? \"-\"\n      : slippageAdjustedAmounts[\"INPUT\"]?.toSignificant(4) ?? \"-\";\n\n  const receivedSymbol =\n    trade?.tradeType === TradeType.EXACT_INPUT\n      ? getTokenSymbol(trade.outputAmount.currency, chainId)\n      : getTokenSymbol(trade?.inputAmount.currency, chainId);\n\n  const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000));\n\n  const priceImpact = priceImpactPer\n    ? priceImpactPer.lessThan(ONE_BIPS)\n      ? \"<0.01%\"\n      : `${priceImpactPer.multiply(-1).toFixed(2)}%`\n    : \"-\";\n\n  const fee = realizedLPFee\n    ? `${realizedLPFee?.toSignificant(6)} ${\n        trade?.inputAmount.currency.wrapped.symbol\n      }`\n    : \"-\";\n\n  return {\n    receivedTitle,\n    received,\n    receivedSymbol: receivedSymbol || \"--\",\n    priceImpact,\n    fee,\n    route: trade?.route.path.reduce((c, t, i, a) => {\n      return `${c} ${t.symbol} ${i !== a.length - 1 ? \">\" : \"\"}`;\n    }, \"\"),\n  };\n}\n","import React from \"react\";\nimport Box from \"../../../../components/Box\";\n\nexport interface SwapFooterProps {\n  receivedTitle: string;\n  received: string;\n  receivedSymbol: string;\n  priceImpact: string;\n  fee: string;\n  route?: string;\n}\n\nconst styles = {\n  marginTop: \"20px\",\n  marginLeft: \"auto\",\n  marginRight: \"auto\",\n  border: \"1px solid #fff\",\n  borderRadius: \"4px\",\n  padding: \"20px\",\n};\n\nfunction SwapFooter(props: SwapFooterProps) {\n  const { fee, received, receivedSymbol, receivedTitle, priceImpact, route } =\n    props;\n\n  return (\n    <Box {...styles}>\n      <Box display=\"flex\">\n        {receivedTitle}\n        <Box as=\"strong\" ml=\"auto\">\n          {received}\n          <span> {receivedSymbol}</span>\n        </Box>\n      </Box>\n      <Box display=\"flex\">\n        Price Impact{\" \"}\n        <Box as=\"strong\" ml=\"auto\">\n          {priceImpact}\n        </Box>\n      </Box>\n      <Box display=\"flex\">\n        Liquidity Provider Fee{\" \"}\n        <Box as=\"strong\" ml=\"auto\">\n          {fee}\n        </Box>\n      </Box>\n      <Box display=\"flex\">\n        Route{\" \"}\n        <Box as=\"strong\" ml=\"auto\">\n          {route}\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default SwapFooter;\n","import { Currency, CurrencyAmount } from \"@uniswap/sdk-core\";\nimport JSBI from \"jsbi\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport React, { useMemo } from \"react\";\nimport useWallet from \"../useWallet\";\nimport { tryParseAmount } from \"./trade\";\nimport { WETH9_EXTENDED, ETHER_TOKEN_LIST } from \"../../constants/tokens\";\nimport { useTokenBalances } from \"../wallet\";\nimport WETH_ABI from \"../../config/abis/weth.json\";\nimport useToast from \"../useToast\";\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE };\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined\n): {\n  wrapType: WrapType;\n  execute?: undefined | (() => Promise<void>);\n  inputError?: string;\n  isExecuting?: boolean;\n} {\n  const { chainId, account, rawBalance, ether } = useWallet();\n\n  const toast = useToast();\n\n  const [isExecuting, setExecuting] = React.useState(false);\n\n  const balances = useTokenBalances(\n    account ?? undefined,\n    React.useMemo(() => {\n      return [inputCurrency];\n    }, [inputCurrency]),\n    ether\n  );\n\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(\n    () => tryParseAmount(typedValue, inputCurrency),\n    [inputCurrency, typedValue]\n  );\n\n  const balance = useMemo(() => {\n    if (inputCurrency && rawBalance && inputCurrency.isNative) {\n      return CurrencyAmount.fromRawAmount(\n        inputCurrency,\n        JSBI.BigInt(rawBalance)\n      );\n    }\n\n    if (inputCurrency && !inputCurrency.isNative) {\n      return balances.amounts[inputCurrency.address];\n    }\n  }, [balances.amounts, inputCurrency, rawBalance]);\n\n  return useMemo(() => {\n    if (!chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE;\n    const weth = WETH9_EXTENDED[chainId];\n    const eth = ETHER_TOKEN_LIST[chainId];\n\n    if (!weth) return NOT_APPLICABLE;\n\n    const hasInputAmount = Boolean(inputAmount?.greaterThan(\"0\"));\n\n    const sufficientBalance =\n      inputAmount && balance && !balance.lessThan(inputAmount);\n\n    const firstNativeSecondWETH =\n      inputCurrency.isNative && weth.equals(outputCurrency);\n\n    const firstWETHSecondNative =\n      weth.equals(inputCurrency) && outputCurrency.isNative;\n\n    async function execute() {\n      if (\n        !chainId ||\n        !inputCurrency ||\n        !outputCurrency ||\n        !inputAmount ||\n        !(firstWETHSecondNative || firstNativeSecondWETH)\n      )\n        return;\n\n      try {\n        setExecuting(true);\n        let tx;\n        let mess;\n\n        const wethContract = new Contract(\n          weth.address,\n          WETH_ABI,\n          ether?.getSigner()\n        );\n\n        if (firstNativeSecondWETH) {\n          mess = `Wrap ${inputAmount.toSignificant(6)} ${eth.symbol} to ${\n            outputCurrency.symbol\n          }`;\n          tx = await wethContract.deposit({\n            value: `0x${inputAmount.quotient.toString(16)}`,\n          });\n        } else if (firstWETHSecondNative) {\n          mess = `Wrap ${inputAmount.toSignificant(6)} ${\n            inputCurrency.symbol\n          } to ${eth.symbol}`;\n          tx = await wethContract.withdraw(\n            `0x${inputAmount.quotient.toString(16)}`\n          );\n        }\n\n        await tx.wait();\n\n        toast({\n          description: mess,\n          status: \"success\",\n        });\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(e);\n        toast({\n          description: \"Failed wrap or unwrap\",\n          status: \"error\",\n        });\n      } finally {\n        setExecuting(false);\n      }\n    }\n\n    if (firstNativeSecondWETH || firstWETHSecondNative) {\n      let inputError: string | undefined;\n\n      if (firstNativeSecondWETH) {\n        inputError = sufficientBalance\n          ? undefined\n          : hasInputAmount\n          ? `Insufficient ${eth.symbol} balance`\n          : `Enter ${eth.symbol} amount`;\n      }\n\n      if (firstWETHSecondNative) {\n        inputError = sufficientBalance\n          ? undefined\n          : hasInputAmount\n          ? `Insufficient ${weth.symbol} balance`\n          : `Enter ${weth.symbol} amount`;\n      }\n\n      return {\n        wrapType: firstNativeSecondWETH ? WrapType.WRAP : WrapType.UNWRAP,\n        execute,\n        inputError,\n        isExecuting,\n      };\n    } else {\n      return NOT_APPLICABLE;\n    }\n  }, [\n    chainId,\n    inputCurrency,\n    outputCurrency,\n    inputAmount,\n    balance,\n    ether,\n    toast,\n    isExecuting,\n  ]);\n}\n","import React from \"react\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { Interface } from \"@ethersproject/abi\";\nimport { MaxUint256 } from \"@ethersproject/constants\";\nimport { Currency, Token } from \"@uniswap/sdk-core\";\nimport useWallet from \"./useWallet\";\nimport useToast from \"./useToast\";\nimport ERC20 from \"../config/abis/erc20.json\";\n\nexport enum ApprovalState {\n  UNKNOWN = \"UNKNOWN\",\n  NOT_APPROVED = \"NOT_APPROVED\",\n  PENDING = \"PENDING\",\n  APPROVED = \"APPROVED\",\n}\n\nexport function useCheckApproval(\n  token: Currency | undefined,\n  spender: string\n): { approve: () => Promise<void>; state: ApprovalState } {\n  const wallet = useWallet();\n\n  const toast = useToast();\n\n  const [pending, setApprovalPending] = React.useState<boolean>(false);\n\n  const [approved, setApproved] = React.useState<boolean | undefined>(\n    undefined\n  );\n\n  const tokenCheck = React.useMemo<Token | undefined>(() => {\n    return token && token.isToken ? token : undefined;\n  }, [token]);\n\n  const contract: Contract | undefined = React.useMemo(() => {\n    if (!wallet.ether && !tokenCheck) {\n      return undefined;\n    }\n\n    if (tokenCheck) {\n      return new Contract(\n        tokenCheck.address,\n        new Interface(ERC20),\n        wallet.account && wallet.ether ? wallet.ether.getSigner() : wallet.ether\n      );\n    }\n\n    return undefined;\n  }, [tokenCheck, wallet.account, wallet.ether]);\n\n  const approve = React.useCallback(async (): Promise<void> => {\n    if (!approved && contract) {\n      try {\n        setApprovalPending(true);\n\n        const estimatedGas = await contract.estimateGas.approve(\n          spender,\n          MaxUint256\n        );\n\n        const trans = await contract.approve(spender, MaxUint256, {\n          gasLimit: estimatedGas,\n        });\n\n        await trans.wait();\n\n        setApproved(true);\n\n        setApprovalPending(false);\n      } catch (e) {\n        setApprovalPending(false);\n        toast({\n          description: \"Failed to approve token\",\n          status: \"error\",\n        });\n        // eslint-disable-next-line no-console\n        console.error(\"Failed to approve token\", e);\n      }\n    }\n  }, [approved, contract, toast, spender]);\n\n  const approvalState = React.useMemo<ApprovalState>(() => {\n    if (!tokenCheck) {\n      return ApprovalState.UNKNOWN;\n    }\n\n    if (tokenCheck && tokenCheck.isNative) {\n      return ApprovalState.APPROVED;\n    }\n\n    if (pending) return ApprovalState.PENDING;\n    if (approved) return ApprovalState.APPROVED;\n    return ApprovalState.NOT_APPROVED;\n  }, [approved, pending, tokenCheck]);\n\n  React.useEffect(() => {\n    if (wallet.account && contract) {\n      contract\n        .allowance(wallet.account, spender)\n        .then((r: any) => {\n          setApproved(!BigNumber.from(r).eq(0));\n        })\n        .catch((e: any) => {\n          // eslint-disable-next-line no-console\n          console.error(\"Failed getReserves \" + e);\n        });\n    }\n  }, [contract, spender, wallet.account]);\n\n  return { state: approvalState, approve };\n}\n","import React from \"react\";\nimport JSBI from \"jsbi\";\nimport { Router, SwapParameters, Trade } from \"custom-uniswap-v2-sdk\";\nimport { TransactionResponse } from \"@ethersproject/providers\";\nimport { Interface } from \"@ethersproject/abi\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { Currency, Percent, TradeType } from \"@uniswap/sdk-core\";\nimport { chain, etherMethods } from \"../../config\";\nimport useWallet from \"../useWallet\";\nimport UNIRouter from \"../../config/abis/IUniswapV2Router02.json\";\nimport JoeRouter from \"../../config/abis/IJoeRouter02.json\";\nimport { ROUTERS } from \"../../constants/routing\";\nimport { getTokenSymbol } from \"../../utils/tokens\";\nimport useToast from \"../useToast\";\n\nfunction isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString);\n}\n\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value\n    .mul(BigNumber.from(10000).add(BigNumber.from(1000)))\n    .div(BigNumber.from(10000));\n}\n\ninterface EstResult {\n  swapParameters: SwapParameters;\n  est?: BigNumber;\n  err?: any;\n}\n\nfunction swapErrorToUserReadableMessage(error: any): string {\n  let reason: string | undefined;\n  while (error) {\n    reason = error.reason ?? error.message ?? reason;\n    error = error.error ?? error.data?.originalError;\n  }\n\n  if (reason?.indexOf(\"execution reverted: \") === 0)\n    reason = reason.substr(\"execution reverted: \".length);\n\n  switch (reason) {\n    case \"UniswapV2Router: EXPIRED\":\n      return `The transaction could not be sent because the deadline has passed. Please check that your transaction deadline is not too low.`;\n    case \"UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT\":\n    case \"UniswapV2Router: EXCESSIVE_INPUT_AMOUNT\":\n      return `This transaction will not succeed either due to price movement or fee on transfer. Try increasing your slippage tolerance.`;\n    case \"TransferHelper: TRANSFER_FROM_FAILED\":\n      return `The input token cannot be transferred. There may be an issue with the input token.`;\n    case \"UniswapV2: TRANSFER_FAILED\":\n      return `The output token cannot be transferred. There may be an issue with the output token.`;\n    case \"UniswapV2: K\":\n      return `The Uniswap invariant x*y=k was not satisfied by the swap. This usually means one of the tokens you are swapping incorporates custom behavior on transfer.`;\n    case \"Too little received\":\n    case \"Too much requested\":\n    case \"STF\":\n      return `This transaction will not succeed due to price movement. Try increasing your slippage tolerance. Note: fee on transfer and rebase tokens are incompatible with Uniswap V3.`;\n    case \"TF\":\n      return `The output token cannot be transferred. There may be an issue with the output token. Note: fee on transfer and rebase tokens are incompatible with Uniswap V3.`;\n    default:\n      if (reason?.indexOf(\"undefined is not an object\") !== -1) {\n        // eslint-disable-next-line no-console\n        console.error(error, reason);\n        return `An error occurred when trying to execute this swap. You may need to increase your slippage tolerance. If that does not work, there may be an incompatibility with the token you are trading. Note: fee on transfer and rebase tokens are incompatible with Uniswap V3.`;\n      }\n      return `Unknown error${\n        reason ? `: \"${reason}\"` : \"\"\n      }. Try increasing your slippage tolerance.`;\n  }\n}\n\nexport function useSwap(dat: {\n  trade?: Trade<Currency, Currency, TradeType> | null;\n  deadline: number;\n  slippageTolerance: number;\n}) {\n  const toast = useToast();\n  const wallet = useWallet();\n  const { trade, deadline, slippageTolerance } = dat;\n  const [isSwapping, setSwapping] = React.useState(false);\n\n  const handleSwap = React.useCallback(async () => {\n    if (wallet.account && trade && wallet.ether) {\n      try {\n        setSwapping(true);\n        const contract = new Contract(\n          ROUTERS[wallet.chainId],\n          // @todo maybe should have better way config these\n          new Interface(\n            wallet.chainId === chain.avax ? JoeRouter : UNIRouter.abi\n          ),\n          wallet.ether.getSigner()\n        );\n\n        const swapMethods: SwapParameters[] = [];\n\n        swapMethods.push(\n          Router.swapCallParameters(trade, {\n            feeOnTransfer: false,\n            allowedSlippage: new Percent(\n              JSBI.BigInt(Math.floor(slippageTolerance)),\n              JSBI.BigInt(10000)\n            ),\n            recipient: wallet.account,\n            ttl: deadline,\n            etherMethods: etherMethods[wallet.chainId],\n          })\n        );\n\n        if (trade.tradeType === TradeType.EXACT_INPUT) {\n          swapMethods.push(\n            Router.swapCallParameters(trade, {\n              feeOnTransfer: true,\n              allowedSlippage: new Percent(\n                JSBI.BigInt(Math.floor(slippageTolerance)),\n                JSBI.BigInt(10000)\n              ),\n              recipient: wallet.account,\n              ttl: deadline,\n              etherMethods: etherMethods[wallet.chainId],\n            })\n          );\n        }\n\n        const final = swapMethods.map((parameters) => ({\n          parameters,\n          contract,\n        }));\n\n        const est = final.map<Promise<EstResult>>((sm) => {\n          return new Promise<EstResult>((resolve) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = sm;\n\n            const options = !value || isZero(value) ? {} : { value };\n            let errorMessage: string;\n            contract.estimateGas[methodName](...args, options)\n              .then((r) => {\n                resolve({\n                  swapParameters: sm.parameters,\n                  est: r,\n                  err: undefined,\n                });\n              })\n              .catch((gasError) => {\n                contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    // eslint-disable-next-line no-console\n                    console.info(\n                      \"Unexpected successful call after failed estimate gas\",\n                      sm.parameters,\n                      gasError,\n                      result\n                    );\n                    return;\n                  })\n                  .catch((callError) => {\n                    // eslint-disable-next-line no-console\n                    console.info(\"Call threw error\", sm.parameters, callError);\n                    errorMessage = swapErrorToUserReadableMessage(callError);\n                  })\n                  .finally(() => {\n                    resolve({\n                      swapParameters: sm.parameters,\n                      err: errorMessage,\n                    });\n                  });\n              });\n          });\n        });\n\n        const estCall = await Promise.all(est);\n\n        const successEstCall = estCall.find((s) => {\n          return s.err === undefined;\n        });\n\n        if (!successEstCall) {\n          estCall.forEach((e) => {\n            // eslint-disable-next-line no-console\n            console.error(\n              `Failed estimate gas for swap call \"${e.swapParameters.methodName}\"`,\n              e.err,\n              e.err.reason\n            );\n            toast({\n              description: `Failed swap. ${e.err}`,\n              status: \"error\",\n            });\n          });\n          return;\n        }\n        const gasEstimate = successEstCall.est;\n        const value = successEstCall.swapParameters.value;\n\n        const tx: TransactionResponse = await contract[\n          successEstCall.swapParameters.methodName\n        ](...successEstCall.swapParameters.args, {\n          gasLimit: calculateGasMargin(gasEstimate || BigNumber.from(0)),\n          ...(value && !isZero(value)\n            ? { value, from: wallet.account }\n            : { from: wallet.account }),\n        });\n\n        await tx.wait();\n\n        const inputSymbol = getTokenSymbol(\n          trade.inputAmount.currency,\n          wallet.chainId\n        );\n        const outputSymbol = getTokenSymbol(\n          trade.outputAmount.currency,\n          wallet.chainId\n        );\n        const inputAmount = trade.inputAmount.toSignificant(3);\n        const outputAmount = trade.outputAmount.toSignificant(3);\n\n        const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`;\n        toast({\n          description: base,\n          status: \"success\",\n        });\n      } catch (e) {\n        if (e?.code === 4001) {\n          toast({\n            description: \"Transaction rejected.\",\n            status: \"info\",\n          });\n        } else {\n          // eslint-disable-next-line no-console\n          console.error(`Critical error when swap`, e, e.reason);\n          toast({\n            description:\n              \"Failed swap. Please try to adjust slippage tolerance or try again later.\",\n            status: \"error\",\n          });\n        }\n      } finally {\n        setSwapping(false);\n      }\n    }\n  }, [\n    wallet.account,\n    wallet.ether,\n    wallet.chainId,\n    trade,\n    slippageTolerance,\n    deadline,\n    toast,\n  ]);\n\n  return {\n    handleSwap,\n    isSwapping,\n  };\n}\n","import { Currency, CurrencyAmount } from \"@uniswap/sdk-core\";\nimport JSBI from \"jsbi\";\nimport { parseEther } from \"@ethersproject/units\";\nimport { SupportedChainId } from \"../constants/chain\";\n\nconst MIN_NATIVE_CURRENCY_FOR_GAS: { [key: number]: JSBI } = {\n  [SupportedChainId.BSC]: JSBI.BigInt(parseEther(\"0.01\")),\n  [SupportedChainId.MATIC]: JSBI.BigInt(parseEther(\"0.01\")),\n  [SupportedChainId.AVAX]: JSBI.BigInt(parseEther(\"0.01\")),\n};\n\nexport function maxAmountSpend(\n  currencyAmount: CurrencyAmount<Currency> | undefined,\n  chainId: number\n): CurrencyAmount<Currency> | undefined {\n  const defaultGas = JSBI.BigInt(parseEther(\"0.01\"));\n\n  if (!currencyAmount) return undefined;\n  if (currencyAmount.currency.isNative) {\n    if (\n      JSBI.greaterThan(\n        currencyAmount.quotient,\n        MIN_NATIVE_CURRENCY_FOR_GAS[chainId] || defaultGas\n      )\n    ) {\n      return CurrencyAmount.fromRawAmount(\n        currencyAmount.currency,\n        JSBI.subtract(\n          currencyAmount.quotient,\n          MIN_NATIVE_CURRENCY_FOR_GAS[chainId]\n        ) || defaultGas\n      );\n    } else {\n      return CurrencyAmount.fromRawAmount(\n        currencyAmount.currency,\n        JSBI.BigInt(0)\n      );\n    }\n  }\n  return currencyAmount;\n}\n","import React from \"react\";\nimport ButtonCore from \"../../../../components/ButtonCore\";\nimport Box from \"../../../../components/Box\";\nimport InputToken from \"../../../../components/InputToken\";\nimport ArrowDown from \"../../../../icons/ArrowDown\";\nimport ArrowUp from \"../../../../icons/ArrowUp\";\nimport Setting from \"../../../../icons/Setting\";\nimport ModalUserSetting from \"../../../../components/ModalUserSetting\";\nimport useToggle from \"../../../../hooks/useToogle\";\nimport ModalSelectToken from \"../../../../components/ModalSelectToken\";\nimport { Field, TokenListDetail } from \"../../../../types\";\nimport { Currency, CurrencyAmount, Token } from \"@uniswap/sdk-core\";\nimport useWallet from \"../../../../hooks/useWallet\";\nimport { useTokenBalances } from \"../../../../hooks/wallet\";\nimport { formatCurrencyAmount } from \"../../../../utils/currency\";\nimport { ExtendedEther } from \"../../../../constants/tokens\";\nimport { useTransactionSettingStore } from \"../../../../stores/transactionSetting\";\nimport { useTrade, useTradePriceSummary } from \"../../../../hooks/swap/trade\";\nimport SwapFooter from \"../SwapFooter\";\nimport { SupportedChainId } from \"../../../../constants/chain\";\nimport useWrapCallback, { WrapType } from \"../../../../hooks/swap/wrap\";\nimport useApp from \"../../../../hooks/useApp\";\nimport {\n  ApprovalState,\n  useCheckApproval,\n} from \"../../../../hooks/useCheckApproval\";\nimport { ROUTERS } from \"../../../../constants/routing\";\nimport { useSwap } from \"../../../../hooks/swap/swap\";\nimport { maxAmountSpend } from \"../../../../utils/maxAmountSpend\";\n\ninterface SwapState {\n  openSelect?: Field;\n  independentField: Field;\n  typedValue: string;\n  [Field.INPUT]?: TokenListDetail | undefined;\n  [Field.OUTPUT]?: TokenListDetail | undefined;\n}\n\nconst TokenLists: { [chainId: number]: string } = {\n  [SupportedChainId.MATIC]:\n    \"https://unpkg.com/quickswap-default-token-list@1.0.71/build/quickswap-default.tokenlist.json\",\n  [SupportedChainId.BSC]:\n    \"https://tokens.pancakeswap.finance/pancakeswap-extended.json\",\n  [SupportedChainId.AVAX]:\n    \"https://raw.githubusercontent.com/traderjoe-xyz/joe-tokenlists/main/joe.tokenlist.json\",\n};\n\nfunction SwapBoard() {\n  const app = useApp();\n\n  const { slippageTolerance, deadline } = useTransactionSettingStore();\n\n  const toggleSettings = useToggle(false);\n\n  const toggleSelectToken = useToggle(false);\n\n  const { account, chainId, ether, rawBalance } = useWallet();\n\n  const [swapState, setSwapState] = React.useState<SwapState>({\n    typedValue: \"\",\n    independentField: Field.INPUT,\n  });\n\n  const dependentField: Field =\n    swapState.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT;\n\n  const selectedCurrency: {\n    [Field.INPUT]: Currency | undefined;\n    [Field.OUTPUT]: Currency | undefined;\n  } = React.useMemo(() => {\n    const tInput = swapState[Field.INPUT];\n\n    const tOutput = swapState[Field.OUTPUT];\n\n    let rInput: Currency | undefined;\n    let rOutput: Currency | undefined;\n\n    if (tInput && chainId) {\n      if (tInput.isNative) {\n        rInput = ExtendedEther.onChain(chainId);\n      } else {\n        rInput = new Token(\n          chainId,\n          tInput.address,\n          tInput.decimals,\n          tInput.symbol,\n          tInput.name\n        );\n      }\n    }\n\n    if (tOutput && chainId) {\n      if (tOutput.isNative) {\n        rOutput = ExtendedEther.onChain(chainId);\n      } else {\n        rOutput = new Token(\n          chainId,\n          tOutput.address,\n          tOutput.decimals,\n          tOutput.symbol,\n          tOutput.name\n        );\n      }\n    }\n\n    if (tOutput?.isNative && chainId) {\n      rOutput = ExtendedEther.onChain(chainId);\n    }\n\n    return {\n      [Field.INPUT]: rInput,\n      [Field.OUTPUT]: rOutput,\n    };\n  }, [chainId, swapState]);\n\n  const approvalInput = useCheckApproval(\n    selectedCurrency[Field.INPUT],\n    ROUTERS[chainId]\n  );\n\n  const approvalOutput = useCheckApproval(\n    selectedCurrency[Field.OUTPUT],\n    ROUTERS[chainId]\n  );\n\n  const isApproving =\n    approvalInput.state === ApprovalState.PENDING ||\n    approvalOutput.state === ApprovalState.PENDING;\n\n  const isRequireApprove =\n    isApproving ||\n    approvalInput.state === ApprovalState.NOT_APPROVED ||\n    approvalOutput.state === ApprovalState.NOT_APPROVED;\n\n  const balances = useTokenBalances(\n    account ?? undefined,\n    React.useMemo(() => {\n      return [selectedCurrency[Field.INPUT], selectedCurrency[Field.OUTPUT]];\n    }, [selectedCurrency]),\n    ether\n  );\n\n  const selectedCurrencyBalances: {\n    [Field.INPUT]: { formatted: string; raw: CurrencyAmount<Currency> };\n    [Field.OUTPUT]: { formatted: string; raw: CurrencyAmount<Currency> };\n  } = React.useMemo(() => {\n    const tInput = selectedCurrency[Field.INPUT];\n    const tOutput = selectedCurrency[Field.OUTPUT];\n\n    let rInput: CurrencyAmount<Currency> | undefined =\n      balances.amounts[(tInput?.isToken && tInput?.address) || \"___\"];\n    let rOutput: CurrencyAmount<Currency> | undefined =\n      balances.amounts[(tOutput?.isToken && tOutput?.address) || \"___\"];\n\n    if (tInput && tInput.isNative) {\n      rInput = CurrencyAmount.fromRawAmount(\n        tInput,\n        rawBalance?.toString() || \"0\"\n      );\n    }\n    if (tOutput && tOutput.isNative) {\n      rOutput = CurrencyAmount.fromRawAmount(\n        tOutput,\n        rawBalance?.toString() || \"0\"\n      );\n    }\n\n    return {\n      [Field.INPUT]: {\n        formatted: formatCurrencyAmount(rInput, 4),\n        raw: rInput,\n      },\n      [Field.OUTPUT]: {\n        formatted: formatCurrencyAmount(rOutput, 4),\n        raw: rOutput,\n      },\n    };\n  }, [balances.amounts, rawBalance, selectedCurrency]);\n\n  const { trade, parsedAmount } = useTrade({\n    typedValue: swapState.typedValue,\n    independentField: swapState.independentField,\n    fields: selectedCurrency,\n  });\n\n  const priceSummary = useTradePriceSummary({ trade });\n\n  const swap = useSwap({\n    trade,\n    deadline,\n    slippageTolerance,\n  });\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n    isExecuting,\n  } = useWrapCallback(\n    selectedCurrency[Field.INPUT],\n    selectedCurrency[Field.OUTPUT],\n    swapState.typedValue\n  );\n\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE;\n\n  const parsedAmounts = React.useMemo(\n    () =>\n      showWrap\n        ? {\n            [Field.INPUT]: parsedAmount,\n            [Field.OUTPUT]: parsedAmount,\n          }\n        : {\n            [Field.INPUT]:\n              swapState.independentField === Field.INPUT\n                ? parsedAmount\n                : trade?.inputAmount,\n            [Field.OUTPUT]:\n              swapState.independentField === Field.OUTPUT\n                ? parsedAmount\n                : trade?.outputAmount,\n          },\n    [swapState.independentField, parsedAmount, showWrap, trade]\n  );\n\n  const maxInputAmount: CurrencyAmount<Currency> | undefined = maxAmountSpend(\n    selectedCurrencyBalances[Field.INPUT].raw,\n    chainId\n  );\n\n  const showMaxButton = Boolean(\n    maxInputAmount?.greaterThan(0) &&\n      !parsedAmounts[Field.INPUT]?.equalTo(maxInputAmount)\n  );\n\n  function handleOpenSelectToken(field: Field) {\n    return () => {\n      setSwapState((c) => {\n        return {\n          ...c,\n          openSelect: field,\n        };\n      });\n      toggleSelectToken.setActive();\n    };\n  }\n\n  const handleSelectToken = React.useCallback(\n    (token: TokenListDetail) => {\n      if (swapState.openSelect) {\n        setSwapState((c) => {\n          return {\n            ...c,\n            [swapState.openSelect === Field.OUTPUT\n              ? Field.OUTPUT\n              : Field.INPUT]: token,\n          };\n        });\n      }\n    },\n    [swapState.openSelect]\n  );\n\n  const handleChangeFromTo = () => {\n    if (swapState[Field.INPUT] || swapState[Field.OUTPUT]) {\n      setSwapState((c) => {\n        return {\n          ...c,\n          [Field.INPUT]: c[Field.OUTPUT],\n          [Field.OUTPUT]: c[Field.INPUT],\n        };\n      });\n    }\n  };\n\n  const hideCurrency = React.useMemo<string[] | undefined>(() => {\n    const output = swapState[Field.OUTPUT];\n\n    if (swapState.openSelect === Field.INPUT && output) {\n      return [output.address];\n    }\n\n    const input = swapState[Field.INPUT];\n\n    if (swapState.openSelect === Field.OUTPUT && input) {\n      return [input.address];\n    }\n\n    return undefined;\n  }, [swapState]);\n\n  function handleInput(value: string) {\n    setSwapState((c) => {\n      return {\n        ...c,\n        independentField: Field.INPUT,\n        typedValue: value,\n      };\n    });\n  }\n\n  function handleOutput(value: string) {\n    setSwapState((c) => {\n      return {\n        ...c,\n        independentField: Field.OUTPUT,\n        typedValue: value,\n      };\n    });\n  }\n\n  function handleMax() {\n    if (maxInputAmount) {\n      setSwapState((c) => {\n        return {\n          ...c,\n          independentField: Field.INPUT,\n          typedValue: maxInputAmount.toExact(),\n        };\n      });\n    }\n  }\n\n  React.useEffect(() => {\n    setSwapState({\n      typedValue: \"\",\n      independentField: Field.INPUT,\n    });\n  }, [chainId]);\n\n  const formattedAmounts = {\n    [swapState.independentField]: swapState.typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[swapState.independentField]?.toExact() ?? \"\"\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? \"\",\n  };\n\n  let error = \"\";\n\n  if (\n    trade?.inputAmount &&\n    trade?.inputAmount.greaterThan(selectedCurrencyBalances[Field.INPUT].raw)\n  ) {\n    error = `Insufficient ${selectedCurrency[Field.INPUT]?.symbol} balance`;\n  }\n\n  if (!trade && wrapType === WrapType.NOT_APPLICABLE) {\n    error = \"Insufficient liquidity for this trade\";\n  }\n\n  if (\n    wrapType === WrapType.NOT_APPLICABLE &&\n    selectedCurrency[Field.OUTPUT] &&\n    selectedCurrency[Field.INPUT] &&\n    selectedCurrency[Field.INPUT]?.equals(selectedCurrency[Field.OUTPUT] as any)\n  ) {\n    error = \"Can't swap the same token\";\n  }\n\n  return (\n    <React.Fragment>\n      <Box\n        border=\"1px solid\"\n        borderColor=\"#fff\"\n        borderRadius=\"4px\"\n        py=\"32px\"\n        px=\"24px\"\n      >\n        <Box display=\"flex\">\n          <Box as=\"p\">\n            Slippage Tolerance:{\" \"}\n            <Box as=\"strong\" color=\"primary\">\n              {slippageTolerance / 100}%\n            </Box>\n          </Box>\n          <Box as=\"button\" aria-label=\"Setting slippage tolerance\" ml=\"8px\">\n            <Setting onClick={toggleSettings.setActive} />\n          </Box>\n        </Box>\n        <Box mt=\"24px\">\n          <InputToken\n            onMax={handleMax}\n            showMaxButton={showMaxButton}\n            disabled={isExecuting || isApproving || swap.isSwapping}\n            inputProps={{\n              value: formattedAmounts[Field.INPUT],\n            }}\n            onUserInput={handleInput}\n            selectedToken={swapState[Field.INPUT]}\n            selectTokenProps={{\n              onClick: handleOpenSelectToken(Field.INPUT),\n            }}\n            label=\"From\"\n            id=\"from\"\n            balance={selectedCurrencyBalances[Field.INPUT].formatted}\n          />\n        </Box>\n        <Box mt=\"24px\" display=\"flex\" justifyContent=\"center\">\n          <Box\n            as=\"button\"\n            aria-label=\"Change from and to token\"\n            onClick={handleChangeFromTo}\n          >\n            <Box as=\"span\" aria-hidden={true} display=\"flex\">\n              <ArrowDown />\n              <Box position=\"relative\" left=\"-6px\">\n                <ArrowUp />\n              </Box>\n            </Box>\n          </Box>\n        </Box>\n        <Box mt=\"24px\">\n          <InputToken\n            disabled={isExecuting || isApproving || swap.isSwapping}\n            inputProps={{\n              value: formattedAmounts[Field.OUTPUT],\n            }}\n            onUserInput={handleOutput}\n            selectedToken={swapState[Field.OUTPUT]}\n            selectTokenProps={{\n              onClick: handleOpenSelectToken(Field.OUTPUT),\n            }}\n            label=\"To\"\n            id=\"to\"\n            balance={selectedCurrencyBalances[Field.OUTPUT].formatted}\n          />\n        </Box>\n        <Box\n          mt=\"24px\"\n          display=\"flex\"\n          justifyContent=\"center\"\n          sx={{\n            \"& > *:nth-child(1)\": {\n              marginRight: \"8px\",\n            },\n          }}\n        >\n          {!account && (\n            <ButtonCore\n              onClick={() => {\n                app.toggleOpenConnect(true);\n              }}\n              width=\"80%\"\n            >\n              Connect Wallet\n            </ButtonCore>\n          )}\n          {account &&\n            isRequireApprove &&\n            (approvalInput.state === ApprovalState.PENDING ||\n              approvalInput.state === ApprovalState.NOT_APPROVED) && (\n              <ButtonCore\n                width=\"80%\"\n                disabled={isApproving}\n                onClick={approvalInput.approve}\n                isLoading={isApproving}\n              >\n                Approve {selectedCurrency[Field.INPUT]?.symbol}\n              </ButtonCore>\n            )}\n          {account &&\n            isRequireApprove &&\n            (approvalOutput.state === ApprovalState.PENDING ||\n              approvalOutput.state === ApprovalState.NOT_APPROVED) && (\n              <ButtonCore\n                width=\"80%\"\n                disabled={isApproving}\n                onClick={approvalOutput.approve}\n                isLoading={isApproving}\n              >\n                Approve {selectedCurrency[Field.OUTPUT]?.symbol}\n              </ButtonCore>\n            )}\n          {account && showWrap && !isRequireApprove && (\n            <ButtonCore\n              width=\"80%\"\n              disabled={Boolean(wrapInputError) || isExecuting}\n              onClick={onWrap}\n              isLoading={isExecuting}\n            >\n              {wrapInputError ??\n                (wrapType === WrapType.WRAP ? (\n                  <span>Wrap</span>\n                ) : wrapType === WrapType.UNWRAP ? (\n                  <span>Unwrap</span>\n                ) : null)}\n            </ButtonCore>\n          )}\n\n          {account &&\n            !showWrap &&\n            !isRequireApprove &&\n            selectedCurrency[Field.INPUT] &&\n            selectedCurrency[Field.OUTPUT] && (\n              <ButtonCore\n                disabled={error !== \"\" || swap.isSwapping}\n                onClick={swap.handleSwap}\n                isLoading={swap.isSwapping}\n                width=\"80%\"\n              >\n                {error ? error : \"Swap\"}\n              </ButtonCore>\n            )}\n        </Box>\n        <ModalUserSetting\n          isOpen={toggleSettings.active}\n          onClose={toggleSettings.setInActive}\n        />\n        {toggleSelectToken.active && (\n          <ModalSelectToken\n            removeTokens={hideCurrency}\n            onSelectToken={handleSelectToken}\n            isOpen={toggleSelectToken.active}\n            onClose={toggleSelectToken.setInActive}\n            tokenList={TokenLists[chainId]}\n          />\n        )}\n      </Box>\n      {trade && wrapType === WrapType.NOT_APPLICABLE && (\n        <SwapFooter {...priceSummary} />\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default SwapBoard;\n","import React from \"react\";\nimport useWallet from \"../../hooks/useWallet\";\nimport Header from \"../../components/Header\";\nimport AppContainer from \"../../components/AppContainer\";\nimport Box from \"../../components/Box\";\nimport SwapBoard from \"./components/SwapBoard\";\nimport { SupportedChainId } from \"../../constants/chain\";\nimport { config } from \"../../config\";\n\nconst logos: { [chainId: number]: string } = {\n  [SupportedChainId.BSC]: `${config.PUBLIC_URL}images/icon/bsc-wallet.svg`,\n  [SupportedChainId.MATIC]: `${config.PUBLIC_URL}images/icon/polygon-white.svg`,\n  [SupportedChainId.AVAX]: `${config.PUBLIC_URL}images/icon/avax.svg`,\n};\n\nfunction Home() {\n  const wallet = useWallet();\n\n  return (\n    <div>\n      <Header />\n      <Box as=\"section\" py=\"50px\">\n        <AppContainer>\n          <Box maxWidth=\"700px\" mx=\"auto\" px=\"16px\">\n            <Box as=\"p\">\n              This website was built to give an example with the package{\" \"}\n              <Box\n                textDecoration=\"underline\"\n                as=\"a\"\n                href=\"https://github.com/gndplayground/uniswap-v2-sdk\"\n              >\n                custom-uniswap-v2-sdk\n              </Box>\n              .\n            </Box>\n            <Box as=\"p\">\n              You can find the source code{\" \"}\n              <Box\n                textDecoration=\"underline\"\n                as=\"a\"\n                href=\"https://github.com/gndplayground/custom-uniswap-v2-sdk-example\"\n              >\n                here\n              </Box>\n              .\n            </Box>\n            <Box as=\"p\">\n              The website uses <strong>PancakeSwap (BSC)</strong>,{\" \"}\n              <strong>QuickSwap (Polygon)</strong> and{\" \"}\n              <strong>Trader Joe (Avalanche)</strong> liquidity pools to give an\n              example token swapping. <br /> Because the website is used for\n              demo purposes so the code might not always stay updated with the\n              development of both platforms. Use with caution.\n            </Box>\n          </Box>\n\n          <Box\n            mt=\"16px\"\n            display=\"flex\"\n            justifyContent=\"center\"\n            as=\"h1\"\n            fontSize=\"32px\"\n            fontWeight=\"bold\"\n          >\n            Swap{\" \"}\n            <Box ml=\"8px\" width=\"40px\" as=\"img\" src={logos[wallet.chainId]} />\n          </Box>\n          <Box mt=\"32px\" maxWidth=\"500px\" mx=\"auto\">\n            <SwapBoard />\n          </Box>\n        </AppContainer>\n      </Box>\n    </div>\n  );\n}\n\nexport default Home;\n"],"sourceRoot":""}